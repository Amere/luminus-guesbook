["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.template');\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\n/**\n * Regular expression that parses a CSS-style id and class\n *           from a tag name.\n */\nreagent.impl.template.re_tag = /([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?/;\n\n/**\n* @constructor\n*/\nreagent.impl.template.NativeWrapper = (function (tag,id,className){\nthis.tag = tag;\nthis.id = id;\nthis.className = className;\n});\n\n(reagent.impl.template.NativeWrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"id\",\"id\",252129435,null),new cljs.core.Symbol(null,\"className\",\"className\",-342755530,null)], null);\n}));\n\n(reagent.impl.template.NativeWrapper.cljs$lang$type = true);\n\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorStr = \"reagent.impl.template/NativeWrapper\");\n\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.impl.template/NativeWrapper\");\n}));\n\n/**\n * Positional factory function for reagent.impl.template/NativeWrapper.\n */\nreagent.impl.template.__GT_NativeWrapper = (function reagent$impl$template$__GT_NativeWrapper(tag,id,className){\nreturn (new reagent.impl.template.NativeWrapper(tag,id,className));\n});\n\nreagent.impl.template.adapt_react_class = (function reagent$impl$template$adapt_react_class(c){\nreturn reagent.impl.template.__GT_NativeWrapper(c,null,null);\n});\nreagent.impl.template.hiccup_tag_QMARK_ = (function reagent$impl$template$hiccup_tag_QMARK_(x){\nreturn ((reagent.impl.util.named_QMARK_(x)) || (typeof x === 'string'));\n});\nreagent.impl.template.valid_tag_QMARK_ = (function reagent$impl$template$valid_tag_QMARK_(x){\nreturn ((reagent.impl.template.hiccup_tag_QMARK_(x)) || (cljs.core.ifn_QMARK_(x)) || ((x instanceof reagent.impl.template.NativeWrapper)));\n});\nreagent.impl.template.prop_name_cache = ({\"class\": \"className\", \"for\": \"htmlFor\", \"charset\": \"charSet\"});\nreagent.impl.template.cache_get = (function reagent$impl$template$cache_get(o,k){\nif(o.hasOwnProperty(k)){\nreturn goog.object.get(o,k);\n} else {\nreturn null;\n}\n});\nreagent.impl.template.cached_prop_name = (function reagent$impl$template$cached_prop_name(k){\nif(reagent.impl.util.named_QMARK_(k)){\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.prop_name_cache,cljs.core.name(k));\nif((temp__5737__auto__ == null)){\nvar v = reagent.impl.util.dash_to_prop_name(k);\ngoog.object.set(reagent.impl.template.prop_name_cache,cljs.core.name(k),v);\n\nreturn v;\n} else {\nvar k_SINGLEQUOTE_ = temp__5737__auto__;\nreturn k_SINGLEQUOTE_;\n}\n} else {\nreturn k;\n}\n});\nreagent.impl.template.kv_conv = (function reagent$impl$template$kv_conv(o,k,v){\nvar G__63688 = o;\ngoog.object.set(G__63688,reagent.impl.template.cached_prop_name(k),(reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1(v) : reagent.impl.template.convert_prop_value.call(null,v)));\n\nreturn G__63688;\n});\nreagent.impl.template.convert_prop_value = (function reagent$impl$template$convert_prop_value(x){\nif(reagent.impl.util.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.reduce_kv(reagent.impl.template.kv_conv,({}),x);\n} else {\nif(cljs.core.coll_QMARK_(x)){\nreturn cljs.core.clj__GT_js(x);\n} else {\nif(cljs.core.ifn_QMARK_(x)){\nreturn (function() { \nvar G__63706__delegate = function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\n};\nvar G__63706 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__63707__i = 0, G__63707__a = new Array(arguments.length -  0);\nwhile (G__63707__i < G__63707__a.length) {G__63707__a[G__63707__i] = arguments[G__63707__i + 0]; ++G__63707__i;}\n  args = new cljs.core.IndexedSeq(G__63707__a,0,null);\n} \nreturn G__63706__delegate.call(this,args);};\nG__63706.cljs$lang$maxFixedArity = 0;\nG__63706.cljs$lang$applyTo = (function (arglist__63708){\nvar args = cljs.core.seq(arglist__63708);\nreturn G__63706__delegate(args);\n});\nG__63706.cljs$core$IFn$_invoke$arity$variadic = G__63706__delegate;\nreturn G__63706;\n})()\n;\n} else {\nreturn cljs.core.clj__GT_js(x);\n\n}\n}\n}\n}\n}\n});\nreagent.impl.template.custom_prop_name_cache = ({});\nreagent.impl.template.cached_custom_prop_name = (function reagent$impl$template$cached_custom_prop_name(k){\nif(reagent.impl.util.named_QMARK_(k)){\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k));\nif((temp__5737__auto__ == null)){\nvar v = reagent.impl.util.dash_to_prop_name(k);\ngoog.object.set(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k),v);\n\nreturn v;\n} else {\nvar k_SINGLEQUOTE_ = temp__5737__auto__;\nreturn k_SINGLEQUOTE_;\n}\n} else {\nreturn k;\n}\n});\nreagent.impl.template.custom_kv_conv = (function reagent$impl$template$custom_kv_conv(o,k,v){\nvar G__63689 = o;\ngoog.object.set(G__63689,reagent.impl.template.cached_custom_prop_name(k),reagent.impl.template.convert_prop_value(v));\n\nreturn G__63689;\n});\nreagent.impl.template.convert_custom_prop_value = (function reagent$impl$template$convert_custom_prop_value(x){\nif(reagent.impl.util.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.reduce_kv(reagent.impl.template.custom_kv_conv,({}),x);\n} else {\nif(cljs.core.coll_QMARK_(x)){\nreturn cljs.core.clj__GT_js(x);\n} else {\nif(cljs.core.ifn_QMARK_(x)){\nreturn (function() { \nvar G__63709__delegate = function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\n};\nvar G__63709 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__63710__i = 0, G__63710__a = new Array(arguments.length -  0);\nwhile (G__63710__i < G__63710__a.length) {G__63710__a[G__63710__i] = arguments[G__63710__i + 0]; ++G__63710__i;}\n  args = new cljs.core.IndexedSeq(G__63710__a,0,null);\n} \nreturn G__63709__delegate.call(this,args);};\nG__63709.cljs$lang$maxFixedArity = 0;\nG__63709.cljs$lang$applyTo = (function (arglist__63711){\nvar args = cljs.core.seq(arglist__63711);\nreturn G__63709__delegate(args);\n});\nG__63709.cljs$core$IFn$_invoke$arity$variadic = G__63709__delegate;\nreturn G__63709;\n})()\n;\n} else {\nreturn cljs.core.clj__GT_js(x);\n\n}\n}\n}\n}\n}\n});\n/**\n * Takes the id and class from tag keyword, and adds them to the\n *   other props. Parsed tag is JS object with :id and :class properties.\n */\nreagent.impl.template.set_id_class = (function reagent$impl$template$set_id_class(props,id_class){\nvar id = id_class.id;\nvar class$ = id_class.className;\nvar G__63690 = props;\nvar G__63690__$1 = (((((!((id == null)))) && ((new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(props) == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__63690,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),id):G__63690);\nif(cljs.core.truth_(class$)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__63690__$1,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(class$,(function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"class\",\"class\",-2030961996).cljs$core$IFn$_invoke$arity$1(props);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"className\",\"className\",-1983287057).cljs$core$IFn$_invoke$arity$1(props);\n}\n})()));\n} else {\nreturn G__63690__$1;\n}\n});\nreagent.impl.template.convert_props = (function reagent$impl$template$convert_props(props,id_class){\nvar class$ = new cljs.core.Keyword(null,\"class\",\"class\",-2030961996).cljs$core$IFn$_invoke$arity$1(props);\nvar props__$1 = reagent.impl.template.set_id_class((function (){var G__63691 = props;\nif(cljs.core.truth_(class$)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__63691,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(class$));\n} else {\nreturn G__63691;\n}\n})(),id_class);\nif(cljs.core.truth_(id_class.custom)){\nreturn reagent.impl.template.convert_custom_prop_value(props__$1);\n} else {\nreturn reagent.impl.template.convert_prop_value(props__$1);\n}\n});\nreagent.impl.template.make_element = (function reagent$impl$template$make_element(this$,argv,component,jsprops,first_child){\nvar G__63692 = (cljs.core.count(argv) - first_child);\nswitch (G__63692) {\ncase (0):\nreturn module$node_modules$react$index.createElement(component,jsprops);\n\nbreak;\ncase (1):\nreturn module$node_modules$react$index.createElement(component,jsprops,reagent.impl.protocols.as_element(this$,cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first_child,null)));\n\nbreak;\ndefault:\nreturn module$node_modules$react$index.createElement.apply(null,cljs.core.reduce_kv((function (a,k,v){\nif((k >= first_child)){\na.push(reagent.impl.protocols.as_element(this$,v));\n} else {\n}\n\nreturn a;\n}),[component,jsprops],argv));\n\n}\n});\n\n/**\n* @constructor\n*/\nreagent.impl.template.HiccupTag = (function (tag,id,className,custom){\nthis.tag = tag;\nthis.id = id;\nthis.className = className;\nthis.custom = custom;\n});\n\n(reagent.impl.template.HiccupTag.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"id\",\"id\",252129435,null),new cljs.core.Symbol(null,\"className\",\"className\",-342755530,null),new cljs.core.Symbol(null,\"custom\",\"custom\",1980683475,null)], null);\n}));\n\n(reagent.impl.template.HiccupTag.cljs$lang$type = true);\n\n(reagent.impl.template.HiccupTag.cljs$lang$ctorStr = \"reagent.impl.template/HiccupTag\");\n\n(reagent.impl.template.HiccupTag.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.impl.template/HiccupTag\");\n}));\n\n/**\n * Positional factory function for reagent.impl.template/HiccupTag.\n */\nreagent.impl.template.__GT_HiccupTag = (function reagent$impl$template$__GT_HiccupTag(tag,id,className,custom){\nreturn (new reagent.impl.template.HiccupTag(tag,id,className,custom));\n});\n\nreagent.impl.template.parse_tag = (function reagent$impl$template$parse_tag(hiccup_tag){\nvar vec__63693 = cljs.core.next(cljs.core.re_matches(reagent.impl.template.re_tag,cljs.core.name(hiccup_tag)));\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__63693,(0),null);\nvar id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__63693,(1),null);\nvar className = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__63693,(2),null);\nvar className__$1 = (((className == null))?null:clojure.string.replace(className,/\\./,\" \"));\nif(cljs.core.truth_(tag)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Invalid tag: '\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccup_tag),\"'\",reagent.impl.component.comp_name()].join(''),\"\\n\",\"tag\"].join('')));\n}\n\nreturn reagent.impl.template.__GT_HiccupTag(tag,id,className__$1,cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((-1),tag.indexOf(\"-\")));\n});\nreagent.impl.template.reag_element = (function reagent$impl$template$reag_element(tag,v,compiler){\nvar c = reagent.impl.component.as_class(tag,compiler);\nvar jsprops = ({});\n(jsprops.argv = v);\n\nvar temp__5739__auto___63713 = reagent.impl.util.react_key_from_vec(v);\nif((temp__5739__auto___63713 == null)){\n} else {\nvar key_63714 = temp__5739__auto___63713;\n(jsprops.key = key_63714);\n}\n\nreturn module$node_modules$react$index.createElement(c,jsprops);\n});\nreagent.impl.template.function_element = (function reagent$impl$template$function_element(tag,v,first_arg,compiler){\nvar jsprops = ({});\n(jsprops.reagentRender = tag);\n\n(jsprops.argv = cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v,first_arg));\n\nvar temp__5739__auto___63715 = reagent.impl.util.react_key_from_vec(v);\nif((temp__5739__auto___63715 == null)){\n} else {\nvar key_63716 = temp__5739__auto___63715;\n(jsprops.key = key_63716);\n}\n\nreturn module$node_modules$react$index.createElement(reagent.impl.component.functional_render_fn(compiler,tag),jsprops);\n});\n/**\n * If given tag is a Class, use it as a class,\n *   else wrap in Reagent function wrapper.\n */\nreagent.impl.template.maybe_function_element = (function reagent$impl$template$maybe_function_element(tag,v,compiler){\nif(reagent.impl.component.react_class_QMARK_(tag)){\nreturn reagent.impl.template.reag_element(tag,v,compiler);\n} else {\nreturn reagent.impl.template.function_element(tag,v,(1),compiler);\n}\n});\nreagent.impl.template.fragment_element = (function reagent$impl$template$fragment_element(argv,compiler){\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(1),null);\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\nvar jsprops = (function (){var or__4126__auto__ = reagent.impl.template.convert_prop_value(((hasprops)?props:null));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child = ((1) + ((hasprops)?(1):(0)));\nvar temp__5739__auto___63717 = reagent.impl.util.react_key_from_vec(argv);\nif((temp__5739__auto___63717 == null)){\n} else {\nvar key_63718 = temp__5739__auto___63717;\n(jsprops.key = key_63718);\n}\n\nreturn reagent.impl.protocols.make_element(compiler,argv,module$node_modules$react$index.Fragment,jsprops,first_child);\n});\nreagent.impl.template.tag_name_cache = ({});\nreagent.impl.template.cached_parse = (function reagent$impl$template$cached_parse(this$,x,_){\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.tag_name_cache,x);\nif((temp__5737__auto__ == null)){\nvar v = reagent.impl.template.parse_tag(x);\ngoog.object.set(reagent.impl.template.tag_name_cache,x,v);\n\nreturn v;\n} else {\nvar s = temp__5737__auto__;\nreturn s;\n}\n});\nreagent.impl.template.native_element = (function reagent$impl$template$native_element(parsed,argv,first,compiler){\nvar component = parsed.tag;\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first,null);\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\nvar jsprops = (function (){var or__4126__auto__ = reagent.impl.template.convert_props(((hasprops)?props:null),parsed);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child = (first + ((hasprops)?(1):(0)));\nif(reagent.impl.input.input_component_QMARK_(component)){\nvar react_key = reagent.impl.util.get_react_key(props);\nvar input_class = (function (){var or__4126__auto__ = compiler.reagentInput;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar x = reagent.impl.component.create_class(reagent.impl.input.input_spec,compiler);\n(compiler.reagentInput = x);\n\nreturn x;\n}\n})();\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.with_meta(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_class,argv,component,jsprops,first_child,compiler], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(react_key)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),react_key], null):null),cljs.core.meta(argv)], 0))));\n} else {\nvar temp__5739__auto___63719 = reagent.impl.util.get_react_key(cljs.core.meta(argv));\nif((temp__5739__auto___63719 == null)){\n} else {\nvar key_63720 = temp__5739__auto___63719;\n(jsprops.key = key_63720);\n}\n\nreturn reagent.impl.protocols.make_element(compiler,argv,component,jsprops,first_child);\n}\n});\nreagent.impl.template.raw_element = (function reagent$impl$template$raw_element(comp,argv,compiler){\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(2),null);\nvar jsprops = (function (){var or__4126__auto__ = props;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn ({});\n}\n})();\nvar temp__5739__auto___63723 = reagent.impl.util.get_react_key(cljs.core.meta(argv));\nif((temp__5739__auto___63723 == null)){\n} else {\nvar key_63724 = temp__5739__auto___63723;\n(jsprops.key = key_63724);\n}\n\nreturn reagent.impl.protocols.make_element(compiler,argv,comp,jsprops,(3));\n});\nreagent.impl.template.expand_seq = (function reagent$impl$template$expand_seq(s,compiler){\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__63696_SHARP_){\nreturn reagent.impl.protocols.as_element(compiler,p1__63696_SHARP_);\n}),s));\n});\nreagent.impl.template.expand_seq_dev = (function reagent$impl$template$expand_seq_dev(s,o,compiler){\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (val){\nif(((cljs.core.vector_QMARK_(val)) && ((reagent.impl.util.react_key_from_vec(val) == null)))){\n(o.no_key = true);\n} else {\n}\n\nreturn reagent.impl.protocols.as_element(compiler,val);\n}),s));\n});\nreagent.impl.template.expand_seq_check = (function reagent$impl$template$expand_seq_check(x,compiler){\nvar ctx = ({});\nvar vec__63697 = reagent.ratom.check_derefs((function (){\nreturn reagent.impl.template.expand_seq_dev(x,ctx,compiler);\n}));\nvar res = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__63697,(0),null);\nvar derefed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__63697,(1),null);\nif(cljs.core.truth_(derefed)){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Reactive deref not supported in lazy seq, \",\"it should be wrapped in doall\"], 0))].join(''));\n} else {\n}\n} else {\n}\n\nif(cljs.core.truth_(ctx.no_key)){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Every element in a seq should have a unique :key\"], 0))].join(''));\n} else {\n}\n} else {\n}\n\nreturn res;\n});\nreagent.impl.template.hiccup_element = (function reagent$impl$template$hiccup_element(v,compiler){\nwhile(true){\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\nvar n = cljs.core.name(tag);\nvar pos = n.indexOf(\">\");\nvar G__63700 = pos;\nswitch (G__63700) {\ncase (-1):\nreturn reagent.impl.template.native_element(reagent.impl.protocols.parse_tag(compiler,n,tag),v,(1),compiler);\n\nbreak;\ncase (0):\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\">\",n)){\nreturn null;\n} else {\nthrow (new Error([\"Assert failed: \",reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Invalid Hiccup tag\"], 0)),\"\\n\",\"(= \\\">\\\" n)\"].join('')));\n}\n\nbreak;\ndefault:\nvar G__63734 = cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(n,(0),pos),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(v,null),(0),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(n,(pos + (1))))], null),cljs.core.meta(v));\nvar G__63735 = compiler;\nv = G__63734;\ncompiler = G__63735;\ncontinue;\n\n}\nbreak;\n}\n});\nreagent.impl.template.vec_to_elem = (function reagent$impl$template$vec_to_elem(v,compiler,fn_to_element){\nif((compiler == null)){\nconsole.error(\"vec-to-elem\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v], 0)));\n} else {\n}\n\nif((cljs.core.count(v) > (0))){\n} else {\nthrow (new Error([\"Assert failed: \",reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Hiccup form should not be empty\"], 0)),\"\\n\",\"(pos? (count v))\"].join('')));\n}\n\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\nif(reagent.impl.template.valid_tag_QMARK_(tag)){\n} else {\nthrow (new Error([\"Assert failed: \",reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Invalid Hiccup form\"], 0)),\"\\n\",\"(valid-tag? tag)\"].join('')));\n}\n\nvar G__63701 = tag;\nvar G__63701__$1 = (((G__63701 instanceof cljs.core.Keyword))?G__63701.fqn:null);\nswitch (G__63701__$1) {\ncase \">\":\nreturn reagent.impl.template.native_element(reagent.impl.template.__GT_HiccupTag(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),null,null,null),v,(2),compiler);\n\nbreak;\ncase \"r>\":\nreturn reagent.impl.template.raw_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),v,compiler);\n\nbreak;\ncase \"f>\":\nreturn reagent.impl.template.function_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),v,(2),compiler);\n\nbreak;\ncase \"<>\":\nreturn reagent.impl.template.fragment_element(v,compiler);\n\nbreak;\ndefault:\nif(reagent.impl.template.hiccup_tag_QMARK_(tag)){\nreturn reagent.impl.template.hiccup_element(v,compiler);\n} else {\nif((tag instanceof reagent.impl.template.NativeWrapper)){\nreturn reagent.impl.template.native_element(tag,v,(1),compiler);\n} else {\nreturn (fn_to_element.cljs$core$IFn$_invoke$arity$3 ? fn_to_element.cljs$core$IFn$_invoke$arity$3(tag,v,compiler) : fn_to_element.call(null,tag,v,compiler));\n\n}\n}\n\n}\n});\nreagent.impl.template.as_element = (function reagent$impl$template$as_element(this$,x,fn_to_element){\nif(reagent.impl.util.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(cljs.core.vector_QMARK_(x)){\nreturn reagent.impl.template.vec_to_elem(x,this$,fn_to_element);\n} else {\nif(cljs.core.seq_QMARK_(x)){\nreturn reagent.impl.template.expand_seq_check(x,this$);\n\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif((((!((x == null))))?(((((x.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IPrintWithWriter$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x))){\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));\n} else {\nreturn x;\n\n}\n}\n}\n}\n}\n});\nreagent.impl.template.create_compiler = (function reagent$impl$template$create_compiler(opts){\nvar id = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"reagent-compiler\");\nvar fn_to_element = (cljs.core.truth_(new cljs.core.Keyword(null,\"function-components\",\"function-components\",1492814963).cljs$core$IFn$_invoke$arity$1(opts))?reagent.impl.template.maybe_function_element:reagent.impl.template.reag_element);\nvar parse_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"parse-tag\",\"parse-tag\",1427313738),reagent.impl.template.cached_parse);\nif((typeof reagent !== 'undefined') && (typeof reagent.impl !== 'undefined') && (typeof reagent.impl.template !== 'undefined') && (typeof reagent.impl.template.t_reagent$impl$template63703 !== 'undefined')){\n} else {\n\n/**\n* @constructor\n * @implements {reagent.impl.protocols.Compiler}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.impl.template.t_reagent$impl$template63703 = (function (opts,id,fn_to_element,parse_fn,meta63704){\nthis.opts = opts;\nthis.id = id;\nthis.fn_to_element = fn_to_element;\nthis.parse_fn = parse_fn;\nthis.meta63704 = meta63704;\nthis.cljs$lang$protocol_mask$partition0$ = 393216;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(reagent.impl.template.t_reagent$impl$template63703.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_63705,meta63704__$1){\nvar self__ = this;\nvar _63705__$1 = this;\nreturn (new reagent.impl.template.t_reagent$impl$template63703(self__.opts,self__.id,self__.fn_to_element,self__.parse_fn,meta63704__$1));\n}));\n\n(reagent.impl.template.t_reagent$impl$template63703.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_63705){\nvar self__ = this;\nvar _63705__$1 = this;\nreturn self__.meta63704;\n}));\n\n(reagent.impl.template.t_reagent$impl$template63703.prototype.reagent$impl$protocols$Compiler$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.impl.template.t_reagent$impl$template63703.prototype.reagent$impl$protocols$Compiler$get_id$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.id;\n}));\n\n(reagent.impl.template.t_reagent$impl$template63703.prototype.reagent$impl$protocols$Compiler$parse_tag$arity$3 = (function (this$,tag_name,tag_value){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (self__.parse_fn.cljs$core$IFn$_invoke$arity$3 ? self__.parse_fn.cljs$core$IFn$_invoke$arity$3(this$__$1,tag_name,tag_value) : self__.parse_fn.call(null,this$__$1,tag_name,tag_value));\n}));\n\n(reagent.impl.template.t_reagent$impl$template63703.prototype.reagent$impl$protocols$Compiler$as_element$arity$2 = (function (this$,x){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.impl.template.as_element(this$__$1,x,self__.fn_to_element);\n}));\n\n(reagent.impl.template.t_reagent$impl$template63703.prototype.reagent$impl$protocols$Compiler$make_element$arity$5 = (function (this$,argv,component,jsprops,first_child){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.impl.template.make_element(this$__$1,argv,component,jsprops,first_child);\n}));\n\n(reagent.impl.template.t_reagent$impl$template63703.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"opts\",\"opts\",1795607228,null),new cljs.core.Symbol(null,\"id\",\"id\",252129435,null),new cljs.core.Symbol(null,\"fn-to-element\",\"fn-to-element\",-1764467095,null),new cljs.core.Symbol(null,\"parse-fn\",\"parse-fn\",-836029424,null),new cljs.core.Symbol(null,\"meta63704\",\"meta63704\",1811216245,null)], null);\n}));\n\n(reagent.impl.template.t_reagent$impl$template63703.cljs$lang$type = true);\n\n(reagent.impl.template.t_reagent$impl$template63703.cljs$lang$ctorStr = \"reagent.impl.template/t_reagent$impl$template63703\");\n\n(reagent.impl.template.t_reagent$impl$template63703.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.impl.template/t_reagent$impl$template63703\");\n}));\n\n/**\n * Positional factory function for reagent.impl.template/t_reagent$impl$template63703.\n */\nreagent.impl.template.__GT_t_reagent$impl$template63703 = (function reagent$impl$template$create_compiler_$___GT_t_reagent$impl$template63703(opts__$1,id__$1,fn_to_element__$1,parse_fn__$1,meta63704){\nreturn (new reagent.impl.template.t_reagent$impl$template63703(opts__$1,id__$1,fn_to_element__$1,parse_fn__$1,meta63704));\n});\n\n}\n\nreturn (new reagent.impl.template.t_reagent$impl$template63703(opts,id,fn_to_element,parse_fn,cljs.core.PersistentArrayMap.EMPTY));\n});\nreagent.impl.template.class_compiler = reagent.impl.template.create_compiler(cljs.core.PersistentArrayMap.EMPTY);\nreagent.impl.template._STAR_current_default_compiler_STAR_ = reagent.impl.template.class_compiler;\nreagent.impl.template.set_default_compiler_BANG_ = (function reagent$impl$template$set_default_compiler_BANG_(compiler){\nreturn (reagent.impl.template._STAR_current_default_compiler_STAR_ = compiler);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/template.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.tools.reader.impl.utils","~$cljs.tools.reader.impl.utils","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.impl.commons","~$cljs.tools.reader.impl.commons","~$clojure.tools.reader.impl.errors","~$cljs.tools.reader.impl.errors","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.tools.reader.edn","~$cljs.tools.reader.edn","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$dev?","~$reagent.debug","~$warn","^R"],"~:excludes",["~#set",[]],"~:name","~$reagent.impl.template","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$input","~$reagent.impl.input","~$reagent.impl.util","^12","~$reagent.impl.protocols","^13","~$p","^13","~$comp","~$reagent.impl.component","~$reagent.ratom","^16","^F","^G","~$cljs.core","^17","^G","^G","~$gobj","~$goog.object","~$goog","^1:","^19","^19","^15","^15","~$util","^12","~$ratom","^16","~$string","~$clojure.string","^11","^11","^R","^R","^1>","^1>"],"~:seen",["^U",["~:require"]],"~:uses",["^ ","~$named?","^12"],"~:require-macros",["^ ","^R","^R","^17","^17","^16","^16","^1<","^16"],"~:form",["~#list",["~$ns","^W",["^1E",["^1@",["^F","~:as","^F"],["^1>","^1G","^1="],["^12","^1G","^1;","~:refer",["^1B"]],["^15","^1G","^14"],["^11","^1G","^10"],["^13","^1G","~$p"],["^16","^1G","^1<"],["^R","~:refer-macros",["^Q","^S"]],["^19","^1G","^18"]]]]],"~:flags",["^ ","^1@",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^1:","^17","^G","^1>","^12","^15","^11","^13","^16","^R","^19"]],"^Y","^W","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/template.cljs"],"~:compiled-at",1705220780083,"~:resource-name","reagent/impl/template.cljs","~:warnings",[],"~:source","(ns reagent.impl.template\n  (:require [react :as react]\n            [clojure.string :as string]\n            [reagent.impl.util :as util :refer [named?]]\n            [reagent.impl.component :as comp]\n            [reagent.impl.input :as input]\n            [reagent.impl.protocols :as p]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dev? warn]]\n            [goog.object :as gobj]))\n\n;; From Weavejester's Hiccup, via pump:\n(def ^{:doc \"Regular expression that parses a CSS-style id and class\n             from a tag name.\"}\n  re-tag #\"([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?\")\n\n(deftype NativeWrapper [tag id className])\n\n(defn adapt-react-class\n  [c]\n  (->NativeWrapper c nil nil))\n\n;;; Common utilities\n\n(defn ^boolean hiccup-tag? [x]\n  (or (named? x)\n      (string? x)))\n\n(defn ^boolean valid-tag? [x]\n  (or (hiccup-tag? x)\n      (ifn? x)\n      (instance? NativeWrapper x)))\n\n;;; Props conversion\n\n;; TODO: Move prop-name caches to the compiler object, if this\n;; conversion can be configured.\n\n(def prop-name-cache #js{:class \"className\"\n                         :for \"htmlFor\"\n                         :charset \"charSet\"})\n\n(defn cache-get [o k]\n  (when ^boolean (.hasOwnProperty o k)\n    (gobj/get o k)))\n\n(defn cached-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get prop-name-cache (name k))]\n      k'\n      (let [v (util/dash-to-prop-name k)]\n        (gobj/set prop-name-cache (name k) v)\n        v))\n    k))\n\n(declare convert-prop-value)\n\n(defn kv-conv [o k v]\n  (doto o\n    (gobj/set (cached-prop-name k) (convert-prop-value v))))\n\n(defn convert-prop-value [x]\n  (cond (util/js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n;; Previous few functions copied for custom elements,\n;; without mapping from class to className etc.\n\n(def custom-prop-name-cache #js{})\n\n(defn cached-custom-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get custom-prop-name-cache (name k))]\n      k'\n      (let [v (util/dash-to-prop-name k)]\n        (gobj/set custom-prop-name-cache (name k) v)\n        v))\n    k))\n\n(defn custom-kv-conv [o k v]\n  (doto o\n    (gobj/set (cached-custom-prop-name k) (convert-prop-value v))))\n\n(defn convert-custom-prop-value [x]\n  (cond (util/js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv custom-kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n(defn set-id-class\n  \"Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties.\"\n  [props id-class]\n  (let [id (.-id id-class)\n        class (.-className id-class)]\n    (cond-> props\n      ;; Only use ID from tag keyword if no :id in props already\n      (and (some? id)\n           (nil? (:id props)))\n      (assoc :id id)\n\n      ;; Merge classes\n      class\n      ;; Note: someone might use React-style :className property,\n      ;; this is the only place where that needs special case. Using\n      ;; :class and :className together is not supported.\n      (assoc :class (util/class-names class (or (:class props) (:className props)))))))\n\n(defn convert-props [props ^clj id-class]\n  (let [class (:class props)\n        props (-> props\n                  (cond-> class (assoc :class (util/class-names class)))\n                  (set-id-class id-class))]\n    (if (.-custom id-class)\n      (convert-custom-prop-value props)\n      (convert-prop-value props))))\n\n;;; Conversion from Hiccup forms\n\n(defn make-element [this argv component jsprops first-child]\n  (case (- (count argv) first-child)\n    ;; Optimize cases of zero or one child\n    0 (react/createElement component jsprops)\n\n    1 (react/createElement component jsprops\n                           (p/as-element this (nth argv first-child nil)))\n\n    (.apply react/createElement nil\n            (reduce-kv (fn [a k v]\n                         (when (>= k first-child)\n                          (.push a (p/as-element this v)))\n                         a)\n                       #js [component jsprops] argv))))\n\n(deftype HiccupTag [tag id className custom])\n\n(defn parse-tag [hiccup-tag]\n  (let [[tag id className] (->> hiccup-tag name (re-matches re-tag) next)\n        className (when-not (nil? className)\n                    (string/replace className #\"\\.\" \" \"))]\n    (assert tag (str \"Invalid tag: '\" hiccup-tag \"'\" (comp/comp-name)))\n    (->HiccupTag tag\n                 id\n                 className\n                 ;; Custom element names must contain hyphen\n                 ;; https://www.w3.org/TR/custom-elements/#custom-elements-core-concepts\n                 (not= -1 (.indexOf tag \"-\")))))\n\n(defn reag-element [tag v compiler]\n  (let [c (comp/as-class tag compiler)\n        jsprops #js {}]\n    (set! (.-argv jsprops) v)\n    (when-some [key (util/react-key-from-vec v)]\n      (set! (.-key jsprops) key))\n    (react/createElement c jsprops)))\n\n(defn function-element [tag v first-arg compiler]\n  (let [jsprops #js {}]\n    (set! (.-reagentRender jsprops) tag)\n    (set! (.-argv jsprops) (subvec v first-arg))\n    ; (set! (.-opts jsprops) opts)\n    (when-some [key (util/react-key-from-vec v)]\n      (set! (.-key jsprops) key))\n    (react/createElement (comp/functional-render-fn compiler tag) jsprops)))\n\n(defn maybe-function-element\n  \"If given tag is a Class, use it as a class,\n  else wrap in Reagent function wrapper.\"\n  [tag v compiler]\n  (if (comp/react-class? tag)\n    (reag-element tag v compiler)\n    (function-element tag v 1 compiler)))\n\n(defn fragment-element [argv compiler]\n  (let [props (nth argv 1 nil)\n        hasprops (or (nil? props) (map? props))\n        jsprops (or (convert-prop-value (if hasprops props))\n                    #js {})\n        first-child (+ 1 (if hasprops 1 0))]\n    (when-some [key (util/react-key-from-vec argv)]\n      (set! (.-key jsprops) key))\n    (p/make-element compiler argv react/Fragment jsprops first-child)))\n\n(def tag-name-cache #js {})\n\n(defn cached-parse [this x _]\n  (if-some [s (cache-get tag-name-cache x)]\n    s\n    (let [v (parse-tag x)]\n      (gobj/set tag-name-cache x v)\n      v)))\n\n;; This is used for html elements (:h1, :input) and also React component with :>/adapt-react-class\n(defn native-element [parsed argv first ^p/Compiler compiler]\n  (let [component (.-tag parsed)\n        props (nth argv first nil)\n        hasprops (or (nil? props) (map? props))\n        jsprops (or (convert-props (if hasprops props) parsed)\n                    #js {})\n        first-child (+ first (if hasprops 1 0))]\n    (if (input/input-component? component)\n      (let [;; Also read :key from props map, because\n            ;; input wrapper will not place the key in useful place.\n            react-key (util/get-react-key props)\n            input-class (or (.-reagentInput compiler)\n                            (let [x (comp/create-class input/input-spec compiler)]\n                              (set! (.-reagentInput compiler) x)\n                              x))]\n        (p/as-element\n          compiler\n          (with-meta [input-class argv component jsprops first-child compiler]\n                     (merge (when react-key\n                              {:key react-key})\n                            (meta argv)))))\n      (do\n        (when-some [key (-> (meta argv) util/get-react-key)]\n          (set! (.-key jsprops) key))\n        (p/make-element compiler argv component jsprops first-child)))))\n\n(defn raw-element [comp argv compiler]\n  (let [props (nth argv 2 nil)\n        jsprops (or props #js {})]\n    ;; If we have key attached to vector metadata, copy that to the\n    ;; jsprops.\n    ;; Often the key is already on the jsprops.\n    (when-some [key (-> (meta argv) util/get-react-key)]\n      (set! (.-key jsprops) key))\n    (p/make-element compiler argv comp jsprops 3)))\n\n(defn expand-seq [s compiler]\n  (into-array (map #(p/as-element compiler %) s)))\n\n(defn expand-seq-dev [s ^clj o compiler]\n  (into-array (map (fn [val]\n                     (when (and (vector? val)\n                                (nil? (util/react-key-from-vec val)))\n                       (set! (.-no-key o) true))\n                     (p/as-element compiler val))\n                   s)))\n\n(defn expand-seq-check [x compiler]\n  (let [ctx #js {}\n        [res derefed] (ratom/check-derefs #(expand-seq-dev x ctx compiler))]\n    (when derefed\n      (warn (util/hiccup-err x (comp/comp-name) \"Reactive deref not supported in lazy seq, \"\n                        \"it should be wrapped in doall\")))\n    (when (.-no-key ctx)\n      (warn (util/hiccup-err x (comp/comp-name) \"Every element in a seq should have a unique :key\")))\n    res))\n\n(defn hiccup-element [v compiler]\n  (let [tag (nth v 0 nil)\n        n (name tag)\n        pos (.indexOf n \">\")]\n    (case pos\n      -1 (native-element (p/parse-tag compiler n tag) v 1 compiler)\n      0 (assert (= \">\" n) (util/hiccup-err v (comp/comp-name) \"Invalid Hiccup tag\"))\n      ;; Support extended hiccup syntax, i.e :div.bar>a.foo\n      ;; Apply metadata (e.g. :key) to the outermost element.\n      ;; Metadata is probably used only with sequeneces, and in that case\n      ;; only the key of the outermost element matters.\n      (recur (with-meta [(subs n 0 pos)\n                         (assoc (with-meta v nil) 0 (subs n (inc pos)))]\n                        (meta v))\n             compiler))))\n\n(defn vec-to-elem [v compiler fn-to-element]\n  (when (nil? compiler)\n    (js/console.error \"vec-to-elem\" (pr-str v)))\n  (assert (pos? (count v)) (util/hiccup-err v (comp/comp-name) \"Hiccup form should not be empty\"))\n  (let [tag (nth v 0 nil)]\n    (assert (valid-tag? tag) (util/hiccup-err v (comp/comp-name) \"Invalid Hiccup form\"))\n    (case tag\n      :> (native-element (->HiccupTag (nth v 1 nil) nil nil nil) v 2 compiler)\n      :r> (raw-element (nth v 1 nil) v compiler)\n      :f> (function-element (nth v 1 nil) v 2 compiler)\n      :<> (fragment-element v compiler)\n      (cond\n       (hiccup-tag? tag)\n       (hiccup-element v compiler)\n\n       (instance? NativeWrapper tag)\n       (native-element tag v 1 compiler)\n\n       :else (fn-to-element tag v compiler)))))\n\n(defn as-element [this x fn-to-element]\n  (cond (util/js-val? x) x\n        (vector? x) (vec-to-elem x this fn-to-element)\n        (seq? x) (if (dev?)\n                   (expand-seq-check x this)\n                   (expand-seq x this))\n        (named? x) (name x)\n        (satisfies? IPrintWithWriter x) (pr-str x)\n        :else x))\n\n(defn create-compiler [opts]\n  (let [id (gensym \"reagent-compiler\")\n        fn-to-element (if (:function-components opts)\n                        maybe-function-element\n                        reag-element)\n        parse-fn (get opts :parse-tag cached-parse)]\n\n    (reify p/Compiler\n      ;; This is used to as cache key to cache component fns per compiler\n      (get-id [this] id)\n      (parse-tag [this tag-name tag-value]\n        (parse-fn this tag-name tag-value))\n      (as-element [this x]\n        (as-element this x fn-to-element))\n      (make-element [this argv component jsprops first-child]\n        (make-element this argv component jsprops first-child)))))\n\n(def class-compiler (create-compiler {}))\n(def ^:dynamic *current-default-compiler* class-compiler)\n\n(defn set-default-compiler! [compiler]\n  (set! *current-default-compiler* compiler))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.impl.template/re-tag","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","reagent.impl.template/NativeWrapper","reagent.impl.template/->NativeWrapper","tag","id","className","reagent.impl.template/adapt-react-class","c","reagent.impl.template/hiccup-tag?","x","reagent.impl.util/named?","reagent.impl.template/valid-tag?","cljs.core/ifn?","reagent.impl.template/prop-name-cache","reagent.impl.template/cache-get","o","k","goog.object/get","reagent.impl.template/cached-prop-name","temp__5737__auto__","k'","cljs.core/name","v","reagent.impl.util/dash-to-prop-name","goog.object/set","reagent.impl.template/kv-conv","G__63688","reagent.impl.template/convert-prop-value","reagent.impl.util/js-val?","cljs.core/map?","cljs.core/reduce-kv","cljs.core/coll?","cljs.core/clj->js","args","cljs.core.apply","reagent.impl.template/custom-prop-name-cache","reagent.impl.template/cached-custom-prop-name","reagent.impl.template/custom-kv-conv","G__63689","reagent.impl.template/convert-custom-prop-value","reagent.impl.template/set-id-class","props","id-class","class","G__63690","cljs.core.assoc","reagent.impl.util.class_names","or__4126__auto__","reagent.impl.template/convert-props","G__63691","reagent.impl.template/make-element","this","argv","component","jsprops","first-child","G__63692","cljs.core/count","js/module$node_modules$react$index.createElement","reagent.impl.protocols/as-element","cljs.core.nth","a","reagent.impl.template/HiccupTag","reagent.impl.template/->HiccupTag","custom","reagent.impl.template/parse-tag","hiccup-tag","vec__63693","cljs.core/re-matches","cljs.core/next","clojure.string/replace","js/Error","reagent.impl.component/comp-name","cljs.core.not_EQ_","reagent.impl.template/reag-element","compiler","reagent.impl.component/as-class","temp__5739__auto__","key","reagent.impl.util/react-key-from-vec","reagent.impl.template/function-element","first-arg","cljs.core.subvec","reagent.impl.component/functional-render-fn","reagent.impl.template/maybe-function-element","reagent.impl.component/react-class?","reagent.impl.template/fragment-element","hasprops","reagent.impl.protocols/make-element","js/module$node_modules$react$index.Fragment","reagent.impl.template/tag-name-cache","reagent.impl.template/cached-parse","_","s","reagent.impl.template/native-element","parsed","first","reagent.impl.input/input-component?","react-key","reagent.impl.util/get-react-key","input-class","reagent.impl.component/create-class","reagent.impl.input/input-spec","cljs.core/with-meta","cljs.core.merge","cljs.core/meta","reagent.impl.template/raw-element","comp","reagent.impl.template/expand-seq","cljs.core.into_array","p1__63696#","cljs.core.map","reagent.impl.template/expand-seq-dev","val","cljs.core/vector?","reagent.impl.template/expand-seq-check","vec__63697","ctx","res","derefed","reagent.ratom/check-derefs","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","reagent.impl.util.hiccup_err","reagent.impl.template/hiccup-element","n","pos","G__63700","reagent.impl.protocols/parse-tag","cljs.core._EQ_","cljs.core.subs","reagent.impl.template/vec-to-elem","fn-to-element","js/console.error","cljs.core.pr_str","G__63701","cljs.core/Keyword","reagent.impl.template/as-element","cljs.core/seq?","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","cljs.core/IPrintWithWriter","reagent.impl.template/create-compiler","opts","cljs.core.gensym","parse-fn","cljs.core.get","js/reagent","js/reagent.impl","js/reagent.impl.template","js/reagent.impl.template.t_reagent$impl$template63703","reagent.impl.template/t_reagent$impl$template63703","_63705","meta63704","reagent.impl.template/->t_reagent$impl$template63703","tag-name","tag-value","reagent.impl.template/class-compiler","reagent.impl.template/*current-default-compiler*","reagent.impl.template/set-default-compiler!"]],"~:used-vars",["^U",["~$cljs.core/PROTOCOL_SENTINEL","~$reagent.impl.template/create-compiler","~$reagent.impl.template/tag-name-cache","~$reagent.impl.template/vec-to-elem","~$reagent.impl.template/expand-seq","~$reagent.impl.util/react-key-from-vec","~$reagent.impl.template/prop-name-cache","~$reagent.impl.protocols/make-element","~$js/console.error","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/ifn?","~$cljs.core/into-array","~$reagent.impl.template/make-element","~$reagent.impl.util/js-val?","~$reagent.impl.template/raw-element","~$reagent.impl.template/parse-tag","~$reagent.impl.template/kv-conv","~$cljs.core/-write","~$reagent.impl.template/hiccup-element","~$reagent.impl.template/convert-prop-value","~$cljs.core/count","~$reagent.impl.component/functional-render-fn","~$cljs.core/apply","~$reagent.impl.template/fragment-element","~$reagent.impl.protocols/parse-tag","~$cljs.core/not=","~$reagent.impl.template/class-compiler","~$reagent.impl.template/->HiccupTag","~$reagent.debug/has-console","~$js/reagent","~$cljs.core/pr-str","~$reagent.impl.component/comp-name","~$js/module$node_modules$react$index.createElement","~$js/console","~$cljs.core/native-satisfies?","~$reagent.impl.template/valid-tag?","~$cljs.core/map?","~$reagent.impl.template/expand-seq-dev","~$reagent.impl.template/cached-prop-name","~$cljs.core/with-meta","~$reagent.impl.template/cached-custom-prop-name","~$cljs.core/map","~$reagent.impl.template/function-element","~$reagent.impl.template/HiccupTag","~$reagent.impl.template/*current-default-compiler*","~$reagent.impl.template/custom-kv-conv","~$js/module$node_modules$react$index.Fragment","~$goog.object/set","~$reagent.debug/tracking","~$reagent.impl.template/maybe-function-element","~$reagent.impl.util/hiccup-err","~$reagent.impl.template/t_reagent$impl$template63703","~$reagent.impl.template/expand-seq-check","~$js/reagent.impl","~$reagent.impl.template/custom-prop-name-cache","~$reagent.impl.template/cached-parse","~$cljs.core/clj->js","~$reagent.impl.util/class-names","~$reagent.debug/track-console","~$cljs.core/subvec","~$reagent.impl.template/adapt-react-class","~$cljs.core/nth","~$cljs.core/meta","~$js/reagent.impl.template","~$reagent.impl.component/react-class?","~$reagent.impl.template/re-tag","~$reagent.impl.template/reag-element","~$reagent.impl.template/native-element","~$cljs.core/not","~$reagent.impl.template/NativeWrapper","~$reagent.impl.template/->NativeWrapper","~$cljs.core/IPrintWithWriter","~$reagent.impl.template/cache-get","~$cljs.core/assoc","~$reagent.impl.template/set-default-compiler!","~$reagent.impl.template/->t_reagent$impl$template63703","~$cljs.core/coll?","~$js/reagent.impl.template.t_reagent$impl$template63703","~$reagent.impl.template/convert-props","~$reagent.impl.input/input-component?","~$cljs.core/reduce-kv","~$reagent.impl.protocols/as-element","~$cljs.core/seq?","~$cljs.core/name","~$reagent.impl.util/named?","~$cljs.core/subs","~$cljs.core/merge","~$reagent.impl.template/hiccup-tag?","~$js/Error","~$reagent.impl.template/set-id-class","~$reagent.impl.template/convert-custom-prop-value","~$goog.object/get","~$reagent.impl.template/as-element"]]],"~:cache-keys",["~#cmap",[["^1N","reagent/impl/batching.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^1:","^17","^R","^12"]]],["^1N","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","~$goog.dom.HtmlElement"]]],["^1N","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","~$goog.array","~$goog.asserts"]]],["^1N","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^1N","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4;","~$goog.labs.userAgent.util","^19","~$goog.string.internal"]]],["^1N","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4<","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4>"]]],["^1N","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4<"]]],["^1N","reagent/impl/util.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^17","^1>","~$clojure.walk","^19","^R"]]],["^1N","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^1N","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^1N","reagent/ratom.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^17","^12","^R","~$reagent.impl.batching","~$clojure.set","^19"]]],["^1N","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1N","shadow/js.js"],["fa1e82c50ca54c81300cceeb10716bdd3f414429","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^1N","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^1N","reagent/impl/template.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^17","^G","^1>","^12","^15","^11","^13","^16","^R","^19"]]],["^1N","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4<"]]],"~:SHADOW-TIMESTAMP",[1705142692000,1705142692000,1704683672000],["^4H","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^4I","~$module$node_modules$object_assign$index"]]],["^1N","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4<","~$goog.reflect"]]],["^1N","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4<","~$goog.html.trustedtypes","^4A","^4B","^4C","^4D"]]],["^1N","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^1N","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^1N","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4;","^4<","~$goog.html.SafeUrl","^4C","^4D","^4>"]]],["^1N","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4<","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4P","^4@","~$goog.html.uncheckedconversions","^4C","^4>"]]],["^1N","reagent/impl/component.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^17","^19","^G","^12","^4F","^13","^16","^R"]]],["^1N","clojure/walk.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^17"]]],["^1N","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1N","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4;","^4<","~$goog.dom.TagName","~$goog.dom.tags","^4T","^4U","~$goog.html.SafeStyleSheet","^4P","^4@","^4O","^4A","^4B","~$goog.labs.userAgent.browser","^19","^4C","^4D","^4>"]]],["^1N","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^19"]]],["^1N","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1N","reagent/impl/protocols.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^17"]]],["^1N","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4;","^4<","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1N","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^4H","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","519ffd5a4c91b67302cc9947b794966d629860cd","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^4I"]]],["^1N","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^1N","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",[]]],["^1N","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4;","^19"]]],["^1N","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^17","^53","~$goog.string.StringBuffer"]]],["^4H","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","6093d43b27c84de58b9ce55e3a930469339c9e54","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^4I","^4M"]]],["^1N","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","~$goog.dom.safe","^4V","^4C","^4>"]]],["^1N","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^1N","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4>"]]],["^1N","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^1N","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4;","^4<","^4R","~$goog.math"]]],["^1N","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4<","^4S","^4T","^4U","^4[","^4P","^4@","^4C","^4>"]]],["^1N","reagent/impl/input.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^17","^15","^4F","^13"]]],["^1N","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:"]]],["^1N","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","~$goog.math.Long","~$goog.math.Integer","^53","^19","^4;","~$goog.Uri","^59"]]],["^1N","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4<","^4O","^4C","^4D"]]],["^1N","reagent/debug.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^17"]]],["^1N","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4;","^4<","^4U","^19","^4C","^4D","^4>"]]],["^1N","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4N"]]],["^1N","clojure/set.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^17"]]],["^1N","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4;","^4<","^53"]]],["^1N","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^46",["^ ","^47",null,"^48",["^U",[]],"^49",["^1:","^4<","^4D"]]]]],"~:clj-info",["^ ","jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/debug.clj",1705220763000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/ratom.clj",1705220763000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1703583035000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/interop.clj",1705220763000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1705142665000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/template.cljs","^7",1,"^8",5,"^9",1,"^:",26],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O"],"^P",["^ ","^Q","^R","^S","^R"],"^T",["^U",[]],"~:shadow/js-access-properties",["^U",["createElement","Fragment"]],"^V","^W","^Z",null,"^[",["^ ","^10","^11","^12","^12","^13","^13","~$p","^13","^14","^15","^16","^16","^F","^G","^17","^17","^G","^G","^18","^19","^1:","^1:","^19","^19","^15","^15","^1;","^12","^1<","^16","^1=","^1>","^11","^11","^R","^R","^1>","^1>"],"^1?",["^U",["^1@"]],"~:shadow/js-access-global",["^U",["Error"]],"^1A",["^ ","^1B","^12"],"~:defs",["^ ","~$valid-tag?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",29,"^8",16,"^9",29,"^:",26,"~:tag","~$boolean","~:arglists",["^1E",["~$quote",["^1E",[["~$x"]]]]]],"^V","^2R","^6","reagent/impl/template.cljs","^:",26,"~:method-params",["^1E",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^1E",[null,null]],"^8",1,"~:variadic?",false,"^7",29,"~:ret-tag","^66","^9",29,"~:max-fixed-arity",1,"^65","^66","~:fn-var",true,"^67",["^1E",["^68",["^1E",[["~$x"]]]]]],"~$adapt-react-class",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",19,"^8",7,"^9",19,"^:",24,"^67",["^1E",["^68",["^1E",[["~$c"]]]]]],"^V","^3?","^6","reagent/impl/template.cljs","^:",24,"^69",["^1E",[["~$c"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",19,"^6=","^3H","^9",19,"^6>",1,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$c"]]]]]],"~$re-tag",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",15,"^8",3,"^9",15,"^:",9,"~:doc","Regular expression that parses a CSS-style id and class\n             from a tag name."],"^V","^3D","^6","reagent/impl/template.cljs","^:",9,"^8",1,"^7",13,"^9",15,"^65","~$any","^6B","Regular expression that parses a CSS-style id and class\n             from a tag name."],"~$function-element",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",165,"^8",7,"^9",165,"^:",23,"^67",["^1E",["^68",["^1E",[["~$tag","~$v","~$first-arg","~$compiler"]]]]]],"^V","^2Y","^6","reagent/impl/template.cljs","^:",23,"^69",["^1E",[["^6E","~$v","^6F","^6G"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",165,"^6=","~$js","^9",165,"^6>",4,"^6?",true,"^67",["^1E",["^68",["^1E",[["^6E","~$v","^6F","^6G"]]]]]],"~$reag-element",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",157,"^8",7,"^9",157,"^:",19,"^67",["^1E",["^68",["^1E",[["^6E","~$v","^6G"]]]]]],"^V","^3E","^6","reagent/impl/template.cljs","^:",19,"^69",["^1E",[["^6E","~$v","^6G"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",157,"^6=","^6H","^9",157,"^6>",3,"^6?",true,"^67",["^1E",["^68",["^1E",[["^6E","~$v","^6G"]]]]]],"~$as-element",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",295,"^8",7,"^9",295,"^:",17,"^67",["^1E",["^68",["^1E",[["~$this","~$x","~$fn-to-element"]]]]]],"^V","^43","^6","reagent/impl/template.cljs","^:",17,"^69",["^1E",[["^6K","~$x","^6L"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",295,"^6=",["^U",[null,"^6C","^1=","~$clj-nil"]],"^9",295,"^6>",3,"^6?",true,"^67",["^1E",["^68",["^1E",[["^6K","~$x","^6L"]]]]]],"~$HiccupTag",["^ ","~:num-fields",4,"~:protocols",["^U",[]],"^V","^2Z","^6","reagent/impl/template.cljs","^:",19,"~:type",true,"^8",10,"^7",143,"~:record",false,"^9",143,"^65","~$function","~:skip-protocol-flag",null],"~$NativeWrapper",["^ ","^6O",3,"^6P",["^U",[]],"^V","^3H","^6","reagent/impl/template.cljs","^:",23,"^6Q",true,"^8",10,"^7",17,"^6R",false,"^9",17,"^65","^6S","^6T",null],"~$*current-default-compiler*",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",323,"^8",16,"^9",323,"^:",42,"~:dynamic",true],"^V","^2[","^6","reagent/impl/template.cljs","^:",42,"^8",1,"^6W",true,"^7",323,"^9",323,"^65","^6C"],"~$->NativeWrapper",["^ ","^64",null,"^5",["^ ","^6P",["^U",[]],"^6","reagent/impl/template.cljs","^:",23,"^8",10,"~:factory","~:positional","^7",17,"^9",17,"^67",["^1E",["^68",["^1E",[["^6E","~$id","~$className"]]]]],"^6T",null,"^6B","Positional factory function for reagent.impl.template/NativeWrapper."],"^6P",["^U",[]],"^V","^3I","^6","reagent/impl/template.cljs","^:",23,"^69",["^1E",[["^6E","^6[","^70"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^6Y","^6Z","^7",17,"^6=","^3H","^9",17,"^6>",3,"^6?",true,"^67",["^1E",["^68",["^1E",[["^6E","^6[","^70"]]]]],"^6T",null,"^6B","Positional factory function for reagent.impl.template/NativeWrapper."],"~$custom-kv-conv",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",85,"^8",7,"^9",85,"^:",21,"^67",["^1E",["^68",["^1E",[["~$o","~$k","~$v"]]]]]],"^V","^30","^6","reagent/impl/template.cljs","^:",21,"^69",["^1E",[["~$o","~$k","~$v"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",85,"^9",85,"^6>",3,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$o","~$k","~$v"]]]]]],"~$->t_reagent$impl$template63703",["^ ","^64",null,"^5",["^ ","~:anonymous",true,"^6P",["^U",["~$reagent.impl.protocols/Compiler","~$cljs.core/IMeta","~$cljs.core/IWithMeta"]],"^6T",["^U",["^75","^76"]],"^6Y","^6Z","^67",["^1E",["^68",["^1E",[["~$opts","^6[","^6L","~$parse-fn","~$meta63704"]]]]],"^6B","Positional factory function for reagent.impl.template/t_reagent$impl$template63703.","^6",null],"^6P",["^U",["^74","^75","^76"]],"^V","^3N","^6","reagent/impl/template.cljs","^69",["^1E",[["^77","^6[","^6L","^78","^79"]]],"^6:",null,"^6;",["^1E",[null,null]],"^73",true,"^8",5,"^6<",false,"^6Y","^6Z","^7",312,"^6=","^36","^6>",5,"^6?",true,"^67",["^1E",["^68",["^1E",[["^77","^6[","^6L","^78","^79"]]]]],"^6T",["^U",["^75","^76"]],"^6B","Positional factory function for reagent.impl.template/t_reagent$impl$template63703."],"~$maybe-function-element",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",174,"^8",7,"^9",174,"^:",29,"^67",["^1E",["^68",["^1E",[["^6E","~$v","^6G"]]]]],"^6B","If given tag is a Class, use it as a class,\n  else wrap in Reagent function wrapper."],"^V","^34","^6","reagent/impl/template.cljs","^:",29,"^69",["^1E",[["^6E","~$v","^6G"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",174,"^6=","^6H","^9",174,"^6>",3,"^6?",true,"^67",["^1E",["^68",["^1E",[["^6E","~$v","^6G"]]]]],"^6B","If given tag is a Class, use it as a class,\n  else wrap in Reagent function wrapper."],"~$t_reagent$impl$template63703",["^ ","^6O",5,"^6P",["^U",["^74","^75","^76"]],"^V","^36","^6","reagent/impl/template.cljs","^6Q",true,"^73",true,"^8",5,"^7",312,"^6R",false,"^65","^6S","^6T",["^U",["^75","^76"]]],"~$hiccup-tag?",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",25,"^8",16,"^9",25,"^:",27,"^65","^66","^67",["^1E",["^68",["^1E",[["~$x"]]]]]],"^V","^3Z","^6","reagent/impl/template.cljs","^:",27,"^69",["^1E",[["~$x"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",25,"^6=","^66","^9",25,"^6>",1,"^65","^66","^6?",true,"^67",["^1E",["^68",["^1E",[["~$x"]]]]]],"~$set-id-class",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",98,"^8",7,"^9",98,"^:",19,"^67",["^1E",["^68",["^1E",[["~$props","~$id-class"]]]]],"^6B","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"^V","^40","^6","reagent/impl/template.cljs","^:",19,"^69",["^1E",[["^7>","^7?"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",98,"^6=",["^U",[null,"~$clj","^6C"]],"^9",98,"^6>",2,"^6?",true,"^67",["^1E",["^68",["^1E",[["^7>","^7?"]]]]],"^6B","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"~$tag-name-cache",["^ ","^V","^20","^6","reagent/impl/template.cljs","^7",192,"^8",1,"^9",192,"^:",20,"^5",["^ ","^6","reagent/impl/template.cljs","^7",192,"^8",6,"^9",192,"^:",20],"^65","~$object"],"~$prop-name-cache",["^ ","^V","^24","^6","reagent/impl/template.cljs","^7",39,"^8",1,"^9",39,"^:",21,"^5",["^ ","^6","reagent/impl/template.cljs","^7",39,"^8",6,"^9",39,"^:",21],"^65","^7B"],"~$convert-props",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",117,"^8",7,"^9",117,"^:",20,"^67",["^1E",["^68",["^1E",[["^7>","^7?"]]]]]],"^V","^3Q","^6","reagent/impl/template.cljs","^:",20,"^69",["^1E",[["^7>","^7?"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",117,"^6=",["^U",[null,"^6C","^1=","^6S"]],"^9",117,"^6>",2,"^6?",true,"^67",["^1E",["^68",["^1E",[["^7>","^7?"]]]]]],"~$set-default-compiler!",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",325,"^8",7,"^9",325,"^:",28,"^67",["^1E",["^68",["^1E",[["^6G"]]]]]],"^V","^3M","^6","reagent/impl/template.cljs","^:",28,"^69",["^1E",[["^6G"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",325,"^9",325,"^6>",1,"^6?",true,"^67",["^1E",["^68",["^1E",[["^6G"]]]]]],"~$custom-prop-name-cache",["^ ","^V","^39","^6","reagent/impl/template.cljs","^7",74,"^8",1,"^9",74,"^:",28,"^5",["^ ","^6","reagent/impl/template.cljs","^7",74,"^8",6,"^9",74,"^:",28],"^65","^7B"],"~$parse-tag",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",145,"^8",7,"^9",145,"^:",16,"^67",["^1E",["^68",["^1E",[["~$hiccup-tag"]]]]]],"^V","^2>","^6","reagent/impl/template.cljs","^:",16,"^69",["^1E",[["^7H"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",145,"^6=","^2Z","^9",145,"^6>",1,"^6?",true,"^67",["^1E",["^68",["^1E",[["^7H"]]]]]],"~$kv-conv",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",58,"^8",7,"^9",58,"^:",14,"^67",["^1E",["^68",["^1E",[["~$o","~$k","~$v"]]]]]],"^V","^2?","^6","reagent/impl/template.cljs","^:",14,"^69",["^1E",[["~$o","~$k","~$v"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",58,"^9",58,"^6>",3,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$o","~$k","~$v"]]]]]],"~$hiccup-element",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",259,"^8",7,"^9",259,"^:",21,"^67",["^1E",["^68",["^1E",[["~$v","^6G"]]]]]],"^V","^2A","^6","reagent/impl/template.cljs","^:",21,"^69",["^1E",[["~$v","^6G"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",259,"^9",259,"^6>",2,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$v","^6G"]]]]]],"~$convert-custom-prop-value",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",89,"^8",7,"^9",89,"^:",32,"^67",["^1E",["^68",["^1E",[["~$x"]]]]]],"^V","^41","^6","reagent/impl/template.cljs","^:",32,"^69",["^1E",[["~$x"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",89,"^6=",["^U",[null,"^6C","^1=","^6S"]],"^9",89,"^6>",1,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$x"]]]]]],"~$native-element",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",202,"^8",7,"^9",202,"^:",21,"^67",["^1E",["^68",["^1E",[["~$parsed","~$argv","~$first","^6G"]]]]]],"^V","^3F","^6","reagent/impl/template.cljs","^:",21,"^69",["^1E",[["^7M","^7N","^7O","^6G"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",202,"^6=","^6C","^9",202,"^6>",4,"^6?",true,"^67",["^1E",["^68",["^1E",[["^7M","^7N","^7O","^6G"]]]]]],"~$fragment-element",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",182,"^8",7,"^9",182,"^:",23,"^67",["^1E",["^68",["^1E",[["^7N","^6G"]]]]]],"^V","^2F","^6","reagent/impl/template.cljs","^:",23,"^69",["^1E",[["^7N","^6G"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",182,"^6=","^6C","^9",182,"^6>",2,"^6?",true,"^67",["^1E",["^68",["^1E",[["^7N","^6G"]]]]]],"~$create-compiler",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",305,"^8",7,"^9",305,"^:",22,"^67",["^1E",["^68",["^1E",[["^77"]]]]]],"^V","^1[","^6","reagent/impl/template.cljs","^:",22,"^69",["^1E",[["^77"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",305,"^6=","^36","^9",305,"^6>",1,"^6?",true,"^67",["^1E",["^68",["^1E",[["^77"]]]]]],"~$vec-to-elem",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",275,"^8",7,"^9",275,"^:",18,"^67",["^1E",["^68",["^1E",[["~$v","^6G","^6L"]]]]]],"^V","^21","^6","reagent/impl/template.cljs","^:",18,"^69",["^1E",[["~$v","^6G","^6L"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",275,"^9",275,"^6>",3,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$v","^6G","^6L"]]]]]],"~$cache-get",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",43,"^8",7,"^9",43,"^:",16,"^67",["^1E",["^68",["^1E",[["~$o","~$k"]]]]]],"^V","^3K","^6","reagent/impl/template.cljs","^:",16,"^69",["^1E",[["~$o","~$k"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",43,"^6=",["^U",["^6C","^6M"]],"^9",43,"^6>",2,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$o","~$k"]]]]]],"~$raw-element",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",228,"^8",7,"^9",228,"^:",18,"^67",["^1E",["^68",["^1E",[["^14","^7N","^6G"]]]]]],"^V","^2=","^6","reagent/impl/template.cljs","^:",18,"^69",["^1E",[["^14","^7N","^6G"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",228,"^6=","^6C","^9",228,"^6>",3,"^6?",true,"^67",["^1E",["^68",["^1E",[["^14","^7N","^6G"]]]]]],"~$make-element",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",128,"^8",7,"^9",128,"^:",19,"^67",["^1E",["^68",["^1E",[["^6K","^7N","~$component","~$jsprops","~$first-child"]]]]]],"^V","^2;","^6","reagent/impl/template.cljs","^:",19,"^69",["^1E",[["^6K","^7N","^7V","^7W","^7X"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",128,"^9",128,"^6>",5,"^6?",true,"^67",["^1E",["^68",["^1E",[["^6K","^7N","^7V","^7W","^7X"]]]]]],"~$expand-seq-dev",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",241,"^8",7,"^9",241,"^:",21,"^67",["^1E",["^68",["^1E",[["~$s","~$o","^6G"]]]]]],"^V","^2T","^6","reagent/impl/template.cljs","^:",21,"^69",["^1E",[["~$s","~$o","^6G"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",241,"^6=","~$array","^9",241,"^6>",3,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$s","~$o","^6G"]]]]]],"~$convert-prop-value",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",62,"^8",7,"^9",62,"^:",25,"^67",["^1E",["^68",["^1E",[["~$x"]]]]]],"^V","^2B","^6","reagent/impl/template.cljs","^:",25,"^69",["^1E",[["~$x"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",62,"^6=",["^U",[null,"^6C","^1=","^6S"]],"^9",62,"^6>",1,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$x"]]]]]],"~$cached-prop-name",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",47,"^8",7,"^9",47,"^:",23,"^67",["^1E",["^68",["^1E",[["~$k"]]]]]],"^V","^2U","^6","reagent/impl/template.cljs","^:",23,"^69",["^1E",[["~$k"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",47,"^6=",["^U",[null,"^6C","^1=","^6M"]],"^9",47,"^6>",1,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$k"]]]]]],"~$cached-custom-prop-name",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",76,"^8",7,"^9",76,"^:",30,"^67",["^1E",["^68",["^1E",[["~$k"]]]]]],"^V","^2W","^6","reagent/impl/template.cljs","^:",30,"^69",["^1E",[["~$k"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",76,"^6=",["^U",[null,"^6C","^1=","^6M"]],"^9",76,"^6>",1,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$k"]]]]]],"~$class-compiler",["^ ","^V","^2I","^6","reagent/impl/template.cljs","^7",322,"^8",1,"^9",322,"^:",20,"^5",["^ ","^6","reagent/impl/template.cljs","^7",322,"^8",6,"^9",322,"^:",20],"^65","^36"],"~$expand-seq",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",238,"^8",7,"^9",238,"^:",17,"^67",["^1E",["^68",["^1E",[["~$s","^6G"]]]]]],"^V","^22","^6","reagent/impl/template.cljs","^:",17,"^69",["^1E",[["~$s","^6G"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",238,"^6=","^7Z","^9",238,"^6>",2,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$s","^6G"]]]]]],"~$->HiccupTag",["^ ","^64",null,"^5",["^ ","^6P",["^U",[]],"^6","reagent/impl/template.cljs","^:",19,"^8",10,"^6Y","^6Z","^7",143,"^9",143,"^67",["^1E",["^68",["^1E",[["^6E","^6[","^70","~$custom"]]]]],"^6T",null,"^6B","Positional factory function for reagent.impl.template/HiccupTag."],"^6P",["^U",[]],"^V","^2J","^6","reagent/impl/template.cljs","^:",19,"^69",["^1E",[["^6E","^6[","^70","^85"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^6Y","^6Z","^7",143,"^6=","^2Z","^9",143,"^6>",4,"^6?",true,"^67",["^1E",["^68",["^1E",[["^6E","^6[","^70","^85"]]]]],"^6T",null,"^6B","Positional factory function for reagent.impl.template/HiccupTag."],"~$expand-seq-check",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",249,"^8",7,"^9",249,"^:",23,"^67",["^1E",["^68",["^1E",[["~$x","^6G"]]]]]],"^V","^37","^6","reagent/impl/template.cljs","^:",23,"^69",["^1E",[["~$x","^6G"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",249,"^6=",["^U",[null,"^6C","^6M"]],"^9",249,"^6>",2,"^6?",true,"^67",["^1E",["^68",["^1E",[["~$x","^6G"]]]]]],"~$cached-parse",["^ ","^64",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",194,"^8",7,"^9",194,"^:",19,"^67",["^1E",["^68",["^1E",[["^6K","~$x","~$_"]]]]]],"^V","^3:","^6","reagent/impl/template.cljs","^:",19,"^69",["^1E",[["^6K","~$x","~$_"]]],"^6:",null,"^6;",["^1E",[null,null]],"^8",1,"^6<",false,"^7",194,"^6=",["^U",["^6C","^2Z","^6M"]],"^9",194,"^6>",3,"^6?",true,"^67",["^1E",["^68",["^1E",[["^6K","~$x","~$_"]]]]]]],"^1C",["^ ","^R","^R","^17","^17","^16","^16","^1<","^16"],"~:cljs.analyzer/constants",["^ ","^1?",["^U",["^6E","~:key","~:else","^6L","~:parse-tag","~:className","^78","~:function-components","^85","~:id","~:class","^79","^70","^6[","^77"]],"~:order",["^6E","^6[","^70","^8:","^8>","^8?","^8<","^85","^89","^8=","^8;","^77","^6L","^78","^79"]],"^1J",["^ ","^1@",["^U",[]]],"^1K",["^ "],"^1L",["^1:","^17","^G","^1>","^12","^15","^11","^13","^16","^R","^19"]],"^Y","^W","~:ns-specs",["^ "],"~:ns-spec-vars",["^U",[]],"~:compiler-options",["^45",[["^8C","~:static-fns"],true,["^8C","~:shadow-tweaks"],null,["^8C","~:source-map-inline"],null,["^8C","~:elide-asserts"],false,["^8C","~:optimize-constants"],null,["^8C","^1Q"],null,["^8C","~:external-config"],null,["^8C","~:tooling-config"],null,["^8C","~:emit-constants"],null,["^8C","~:load-tests"],null,["^8C","~:form-size-threshold"],null,["^8C","~:data-readers"],null,["^8C","~:infer-externs"],"~:auto",["^8C","^1S"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^8C","~:fn-invoke-direct"],null,["^8C","~:source-map"],"/dev/null"]]]