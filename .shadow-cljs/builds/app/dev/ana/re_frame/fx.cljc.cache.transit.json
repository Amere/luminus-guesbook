["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed, other than that\n *   `:db` is guaranteed to be executed first.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__57854 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__57855 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__57855);\n\ntry{try{var effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5735__auto___57937 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5735__auto___57937)){\nvar new_db_57938 = temp__5735__auto___57937;\nvar fexpr__57856_57939 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__57856_57939.cljs$core$IFn$_invoke$arity$1 ? fexpr__57856_57939.cljs$core$IFn$_invoke$arity$1(new_db_57938) : fexpr__57856_57939.call(null,new_db_57938));\n} else {\n}\n\nvar seq__57857 = cljs.core.seq(effects_without_db);\nvar chunk__57858 = null;\nvar count__57859 = (0);\nvar i__57860 = (0);\nwhile(true){\nif((i__57860 < count__57859)){\nvar vec__57867 = chunk__57858.cljs$core$IIndexed$_nth$arity$2(null,i__57860);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57867,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57867,(1),null);\nvar temp__5733__auto___57940 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___57940)){\nvar effect_fn_57941 = temp__5733__auto___57940;\n(effect_fn_57941.cljs$core$IFn$_invoke$arity$1 ? effect_fn_57941.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_57941.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__57942 = seq__57857;\nvar G__57943 = chunk__57858;\nvar G__57944 = count__57859;\nvar G__57945 = (i__57860 + (1));\nseq__57857 = G__57942;\nchunk__57858 = G__57943;\ncount__57859 = G__57944;\ni__57860 = G__57945;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__57857);\nif(temp__5735__auto__){\nvar seq__57857__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57857__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__57857__$1);\nvar G__57946 = cljs.core.chunk_rest(seq__57857__$1);\nvar G__57947 = c__4556__auto__;\nvar G__57948 = cljs.core.count(c__4556__auto__);\nvar G__57949 = (0);\nseq__57857 = G__57946;\nchunk__57858 = G__57947;\ncount__57859 = G__57948;\ni__57860 = G__57949;\ncontinue;\n} else {\nvar vec__57870 = cljs.core.first(seq__57857__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57870,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57870,(1),null);\nvar temp__5733__auto___57950 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___57950)){\nvar effect_fn_57951 = temp__5733__auto___57950;\n(effect_fn_57951.cljs$core$IFn$_invoke$arity$1 ? effect_fn_57951.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_57951.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__57952 = cljs.core.next(seq__57857__$1);\nvar G__57953 = null;\nvar G__57954 = (0);\nvar G__57955 = (0);\nseq__57857 = G__57952;\nchunk__57858 = G__57953;\ncount__57859 = G__57954;\ni__57860 = G__57955;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__57469__auto___57956 = re_frame.interop.now();\nvar duration__57470__auto___57957 = (end__57469__auto___57956 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__57470__auto___57957,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__57469__auto___57956);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__57854);\n}} else {\nvar effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5735__auto___57958 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5735__auto___57958)){\nvar new_db_57959 = temp__5735__auto___57958;\nvar fexpr__57873_57960 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__57873_57960.cljs$core$IFn$_invoke$arity$1 ? fexpr__57873_57960.cljs$core$IFn$_invoke$arity$1(new_db_57959) : fexpr__57873_57960.call(null,new_db_57959));\n} else {\n}\n\nvar seq__57875 = cljs.core.seq(effects_without_db);\nvar chunk__57876 = null;\nvar count__57877 = (0);\nvar i__57878 = (0);\nwhile(true){\nif((i__57878 < count__57877)){\nvar vec__57887 = chunk__57876.cljs$core$IIndexed$_nth$arity$2(null,i__57878);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57887,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57887,(1),null);\nvar temp__5733__auto___57961 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___57961)){\nvar effect_fn_57962 = temp__5733__auto___57961;\n(effect_fn_57962.cljs$core$IFn$_invoke$arity$1 ? effect_fn_57962.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_57962.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__57963 = seq__57875;\nvar G__57964 = chunk__57876;\nvar G__57965 = count__57877;\nvar G__57966 = (i__57878 + (1));\nseq__57875 = G__57963;\nchunk__57876 = G__57964;\ncount__57877 = G__57965;\ni__57878 = G__57966;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__57875);\nif(temp__5735__auto__){\nvar seq__57875__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57875__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__57875__$1);\nvar G__57967 = cljs.core.chunk_rest(seq__57875__$1);\nvar G__57968 = c__4556__auto__;\nvar G__57969 = cljs.core.count(c__4556__auto__);\nvar G__57970 = (0);\nseq__57875 = G__57967;\nchunk__57876 = G__57968;\ncount__57877 = G__57969;\ni__57878 = G__57970;\ncontinue;\n} else {\nvar vec__57890 = cljs.core.first(seq__57875__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57890,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57890,(1),null);\nvar temp__5733__auto___57971 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___57971)){\nvar effect_fn_57972 = temp__5733__auto___57971;\n(effect_fn_57972.cljs$core$IFn$_invoke$arity$1 ? effect_fn_57972.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_57972.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__57973 = cljs.core.next(seq__57875__$1);\nvar G__57974 = null;\nvar G__57975 = (0);\nvar G__57976 = (0);\nseq__57875 = G__57973;\nchunk__57876 = G__57974;\ncount__57877 = G__57975;\ni__57878 = G__57976;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.dispatch_later = (function re_frame$fx$dispatch_later(p__57893){\nvar map__57894 = p__57893;\nvar map__57894__$1 = (((((!((map__57894 == null))))?(((((map__57894.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__57894.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__57894):map__57894);\nvar effect = map__57894__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57894__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57894__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nreturn re_frame.interop.set_timeout_BANG_((function (){\nreturn re_frame.router.dispatch(dispatch);\n}),ms);\n}\n});\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nif(cljs.core.map_QMARK_(value)){\nreturn re_frame.fx.dispatch_later(value);\n} else {\nvar seq__57897 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__57898 = null;\nvar count__57899 = (0);\nvar i__57900 = (0);\nwhile(true){\nif((i__57900 < count__57899)){\nvar effect = chunk__57898.cljs$core$IIndexed$_nth$arity$2(null,i__57900);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__57977 = seq__57897;\nvar G__57978 = chunk__57898;\nvar G__57979 = count__57899;\nvar G__57980 = (i__57900 + (1));\nseq__57897 = G__57977;\nchunk__57898 = G__57978;\ncount__57899 = G__57979;\ni__57900 = G__57980;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__57897);\nif(temp__5735__auto__){\nvar seq__57897__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57897__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__57897__$1);\nvar G__57981 = cljs.core.chunk_rest(seq__57897__$1);\nvar G__57982 = c__4556__auto__;\nvar G__57983 = cljs.core.count(c__4556__auto__);\nvar G__57984 = (0);\nseq__57897 = G__57981;\nchunk__57898 = G__57982;\ncount__57899 = G__57983;\ni__57900 = G__57984;\ncontinue;\n} else {\nvar effect = cljs.core.first(seq__57897__$1);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__57985 = cljs.core.next(seq__57897__$1);\nvar G__57986 = null;\nvar G__57987 = (0);\nvar G__57988 = (0);\nseq__57897 = G__57985;\nchunk__57898 = G__57986;\ncount__57899 = G__57987;\ni__57900 = G__57988;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),(function (seq_of_effects){\nif((!(cljs.core.sequential_QMARK_(seq_of_effects)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect expects a seq, but was given \",cljs.core.type(seq_of_effects)], 0));\n} else {\nvar seq__57913 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,seq_of_effects));\nvar chunk__57914 = null;\nvar count__57915 = (0);\nvar i__57916 = (0);\nwhile(true){\nif((i__57916 < count__57915)){\nvar vec__57923 = chunk__57914.cljs$core$IIndexed$_nth$arity$2(null,i__57916);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57923,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57923,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5733__auto___57991 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___57991)){\nvar effect_fn_57992 = temp__5733__auto___57991;\n(effect_fn_57992.cljs$core$IFn$_invoke$arity$1 ? effect_fn_57992.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_57992.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__57994 = seq__57913;\nvar G__57995 = chunk__57914;\nvar G__57996 = count__57915;\nvar G__57997 = (i__57916 + (1));\nseq__57913 = G__57994;\nchunk__57914 = G__57995;\ncount__57915 = G__57996;\ni__57916 = G__57997;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__57913);\nif(temp__5735__auto__){\nvar seq__57913__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57913__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__57913__$1);\nvar G__57999 = cljs.core.chunk_rest(seq__57913__$1);\nvar G__58000 = c__4556__auto__;\nvar G__58001 = cljs.core.count(c__4556__auto__);\nvar G__58002 = (0);\nseq__57913 = G__57999;\nchunk__57914 = G__58000;\ncount__57915 = G__58001;\ni__57916 = G__58002;\ncontinue;\n} else {\nvar vec__57926 = cljs.core.first(seq__57913__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57926,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57926,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5733__auto___58005 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___58005)){\nvar effect_fn_58007 = temp__5733__auto___58005;\n(effect_fn_58007.cljs$core$IFn$_invoke$arity$1 ? effect_fn_58007.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_58007.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__58009 = cljs.core.next(seq__57913__$1);\nvar G__58010 = null;\nvar G__58011 = (0);\nvar G__58012 = (0);\nseq__57913 = G__58009;\nchunk__57914 = G__58010;\ncount__57915 = G__58011;\ni__57916 = G__58012;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__57929 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__57930 = null;\nvar count__57931 = (0);\nvar i__57932 = (0);\nwhile(true){\nif((i__57932 < count__57931)){\nvar event = chunk__57930.cljs$core$IIndexed$_nth$arity$2(null,i__57932);\nre_frame.router.dispatch(event);\n\n\nvar G__58015 = seq__57929;\nvar G__58016 = chunk__57930;\nvar G__58017 = count__57931;\nvar G__58018 = (i__57932 + (1));\nseq__57929 = G__58015;\nchunk__57930 = G__58016;\ncount__57931 = G__58017;\ni__57932 = G__58018;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__57929);\nif(temp__5735__auto__){\nvar seq__57929__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57929__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__57929__$1);\nvar G__58019 = cljs.core.chunk_rest(seq__57929__$1);\nvar G__58020 = c__4556__auto__;\nvar G__58021 = cljs.core.count(c__4556__auto__);\nvar G__58022 = (0);\nseq__57929 = G__58019;\nchunk__57930 = G__58020;\ncount__57931 = G__58021;\ni__57932 = G__58022;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__57929__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__58023 = cljs.core.next(seq__57929__$1);\nvar G__58024 = null;\nvar G__58025 = (0);\nvar G__58026 = (0);\nseq__57929 = G__58023;\nchunk__57930 = G__58024;\ncount__57931 = G__58025;\ni__57932 = G__58026;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__57933 = cljs.core.seq(value);\nvar chunk__57934 = null;\nvar count__57935 = (0);\nvar i__57936 = (0);\nwhile(true){\nif((i__57936 < count__57935)){\nvar event = chunk__57934.cljs$core$IIndexed$_nth$arity$2(null,i__57936);\nclear_event(event);\n\n\nvar G__58027 = seq__57933;\nvar G__58028 = chunk__57934;\nvar G__58029 = count__57935;\nvar G__58030 = (i__57936 + (1));\nseq__57933 = G__58027;\nchunk__57934 = G__58028;\ncount__57935 = G__58029;\ni__57936 = G__58030;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__57933);\nif(temp__5735__auto__){\nvar seq__57933__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57933__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__57933__$1);\nvar G__58031 = cljs.core.chunk_rest(seq__57933__$1);\nvar G__58032 = c__4556__auto__;\nvar G__58033 = cljs.core.count(c__4556__auto__);\nvar G__58034 = (0);\nseq__57933 = G__58031;\nchunk__57934 = G__58032;\ncount__57935 = G__58033;\ni__57936 = G__58034;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__57933__$1);\nclear_event(event);\n\n\nvar G__58035 = cljs.core.next(seq__57933__$1);\nvar G__58036 = null;\nvar G__58037 = (0);\nvar G__58038 = (0);\nseq__57933 = G__58035;\nchunk__57934 = G__58036;\ncount__57935 = G__58037;\ni__57936 = G__58038;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^O","~$re-frame.interceptor","^P","~$re-frame.events","^Q","~$re-frame.trace","^R","~$re-frame.registrar","^S","~$cljs.core","^T","~$goog","^U","~$router","~$re-frame.router","^W","^W","~$trace","^R","~$events","^Q","~$re-frame.loggers","^Z","~$re-frame.db","^["],"~:seen",["^H",["~:require"]],"~:uses",["^ ","~$app-db","^[","~$->interceptor","^P","~$set-timeout!","^O","~$get-handler","^S","~$clear-handlers","^S","~$register-handler","^S","~$console","^Z"],"~:require-macros",["^ ","^R","^R","^X","^R","^T","^T"],"~:form",["~#list",["~$ns","^J",["^1<",["^11",["^W","~:as","^V"],["^[","~:refer",["^13"]],["^P","^1?",["^14"]],["^O","^1?",["^15"]],["^Q","^1>","^Y"],["^S","^1?",["^16","^17","^18"]],["^Z","^1?",["^19"]],["^R","^1>","^X","~:include-macros",true]]]]],"~:flags",["^ ","^11",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^W","^[","^P","^O","^Q","^S","^Z","^R"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1705149134084,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (let [effects            (:effects context)\n                     effects-without-db (dissoc effects :db)]\n                 ;; :db effect is guaranteed to be handled before all other effects.\n                 (when-let [new-db (:db effects)]\n                   ((get-handler kind :db false) new-db))\n                 (doseq [[effect-key effect-value] effects-without-db]\n                   (if-let [effect-fn (get-handler kind effect-key false)]\n                     (effect-fn effect-value)\n                     (console :warn \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\"))))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(defn dispatch-later\n  [{:keys [ms dispatch] :as effect}]\n  (if (or (empty? dispatch) (not (number? ms)))\n    (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n    (set-timeout! #(router/dispatch dispatch) ms)))\n\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (if (map? value)\n      (dispatch-later value)\n      (doseq [effect (remove nil? value)]\n        (dispatch-later effect)))))\n\n;; :fx\n;;\n;; Handle one or more effects. Expects a collection of vectors (tuples) of the\n;; form [effect-key effect-value]. `nil` entries in the collection are ignored\n;; so effects can be added conditionally.\n;;\n;; usage:\n;;\n;; {:fx [[:dispatch [:event-id \"param\"]]\n;;       nil\n;;       [:http-xhrio {:method :post\n;;                     ...}]]}\n;;\n\n(reg-fx\n  :fx\n  (fn [seq-of-effects]\n    (if-not (sequential? seq-of-effects)\n      (console :error \"re-frame: \\\":fx\\\" effect expects a seq, but was given \" (type seq-of-effects))\n      (doseq [[effect-key effect-value] (remove nil? seq-of-effects)]\n        (when (= :db effect-key)\n          (console :warn \"re-frame: \\\":fx\\\" effect should not contain a :db effect\"))\n        (if-let [effect-fn (get-handler kind effect-key false)]\n          (effect-fn effect-value)\n          (console :warn \"re-frame: in \\\":fx\\\" effect found \" effect-key \" which has no associated handler. Ignoring.\"))))))\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__57854","re-frame.trace/*current-trace*","*current-trace*-temp-val__57855","re-frame.trace/start-trace","end__57469__auto__","re-frame.interop/now","duration__57470__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","effects","effects-without-db","cljs.core.dissoc","temp__5735__auto__","new-db","fexpr__57856","fexpr__57873","re_frame.registrar.get_handler","seq__57857","cljs.core/seq","chunk__57858","count__57859","i__57860","vec__57867","cljs.core.nth","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__57870","cljs.core/first","cljs.core/next","seq__57875","chunk__57876","count__57877","i__57878","vec__57887","vec__57890","effect-key","effect-value","temp__5733__auto__","effect-fn","re_frame.loggers.console","p__57893","map__57894","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","re-frame.fx/dispatch-later","ms","dispatch","effect","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","value","cljs.core/map?","seq__57897","chunk__57898","count__57899","i__57900","cljs.core.remove","cljs.core/nil?","seq-of-effects","cljs.core/sequential?","cljs.core/type","seq__57913","chunk__57914","count__57915","i__57916","vec__57923","vec__57926","cljs.core._EQ_","cljs.core/vector?","seq__57929","chunk__57930","count__57931","i__57932","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__57933","chunk__57934","count__57935","i__57936","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^H",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$cljs.core/=","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.registrar/kinds","~$re-frame.fx/dispatch-later","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/map?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1E","reagent/impl/batching.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^U","^T","~$reagent.debug","~$reagent.impl.util"]]],["^1E","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.dom.HtmlElement"]]],["^1E","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.labs.userAgent.util","~$goog.string"]]],["^1E","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.array","~$goog.asserts"]]],["^1E","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1E","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","^2O","~$goog.object","~$goog.string.internal"]]],["^1E","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2R","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2V"]]],["^1E","re_frame/loggers.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","~$clojure.set"]]],["^1E","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2R"]]],["^1E","reagent/impl/util.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","~$clojure.string","~$clojure.walk","^2U","^2L"]]],["^1E","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2O","~$goog.reflect","^2P"]]],["^1E","re_frame/router.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^Q","^O","^Z","^R"]]],["^1E","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2R","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2S","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1E","re_frame/registrar.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^O","^Z","~$re-frame.settings"]]],["^1E","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2T"]]],["^1E","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","reagent/ratom.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^2M","^2L","~$reagent.impl.batching","^31","^2U"]]],["^1E","re_frame/interop.cljs"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","~$goog.async.nextTick","~$goog.events","~$reagent.core","~$reagent.ratom"]]],["^1E","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.disposable.IDisposable"]]],["^1E","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1E","shadow/js.js"],["fa1e82c50ca54c81300cceeb10716bdd3f414429","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","reagent/impl/template.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^C","^32","^2M","~$reagent.impl.component","^3=","~$reagent.impl.input","~$reagent.impl.protocols","^3A","^2L","^2U"]]],["^1E","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2R"]]],"~:SHADOW-TIMESTAMP",[1705142692000,1705142692000,1704683672000],["^3C","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^3D","~$module$node_modules$object_assign$index"]]],["^1E","re_frame/events.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^[","~$re-frame.utils","^O","^S","^Z","^P","^R"]]],["^1E","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2R","^37"]]],["^1E","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.events.ListenableKey"]]],["^1E","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2R","~$goog.html.trustedtypes","^2Y","^2Z","^2[","^30"]]],["^1E","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","~$goog.events.Listener","^2U"]]],["^1E","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","^2R","~$goog.html.SafeUrl","^2[","^30","^2V"]]],["^1E","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2R","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3P","^2X","~$goog.html.uncheckedconversions","^2[","^2V"]]],["^1E","reagent/impl/component.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^2U","^C","^2M","^3=","^3I","^3A","^2L"]]],["^1E","clojure/walk.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T"]]],["^1E","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1E","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","^2R","~$goog.dom.TagName","~$goog.dom.tags","^3T","^3U","~$goog.html.SafeStyleSheet","^3P","^2X","^3N","^2Y","^2Z","^34","^2U","^2[","^30","^2V"]]],["^1E","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2U"]]],["^1E","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","^2O","^2P"]]],["^1E","re_frame/settings.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^O","^Z"]]],["^1E","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","^2R","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^3Y","~$goog.dom.safe","^3S","^3V","~$goog.math.Coordinate","~$goog.math.Size","^2U","^2P","~$goog.string.Unicode","^2T"]]],["^1E","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.debug.Error","^41"]]],["^1E","reagent/impl/protocols.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T"]]],["^1E","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","^2R","^2P","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1E","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^3C","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","519ffd5a4c91b67302cc9947b794966d629860cd","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^3D"]]],["^1E","re_frame/db.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^O"]]],["^1E","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",[]]],["^1E","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","^2U"]]],["^1E","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^2P","~$goog.string.StringBuffer"]]],["^3C","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","6093d43b27c84de58b9ce55e3a930469339c9e54","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^3D","^3K"]]],["^1E","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2R"]]],["^1E","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^42","^3V","^2[","^2V"]]],["^1E","re_frame/interceptor.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^Z","^O","^R","^31"]]],["^1E","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2V"]]],["^1E","reagent/core.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^C","~$reagent.impl.template","^3G","^2M","^3=","^3I","^3A","^2L"]]],["^1E","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","~$goog.debug.errorcontext","^2T"]]],["^1E","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.math"]]],["^1E","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","^2R","^3R","^4?"]]],["^1E","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^38","~$goog.dom","^3Y","^42","^3R","^3S","^2X","^34","^35","^2["]]],["^1E","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2R","^3S","^3T","^3U","^3[","^3P","^2X","^2[","^2V"]]],["^1E","re_frame/utils.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^Z"]]],["^1E","re_frame/fx.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^W","^[","^P","^O","^Q","^S","^Z","^R"]]],["^1E","reagent/impl/input.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^3G","^3=","^3I"]]],["^1E","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.Disposable","~$goog.events.EventId"]]],["^1E","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U"]]],["^1E","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.math.Long","~$goog.math.Integer","^2P","^2U","^2Q","~$goog.Uri","^4<"]]],["^1E","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2R","^3N","^2[","^30"]]],["^1E","reagent/debug.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T"]]],["^1E","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","^2R","^3U","^2U","^2[","^30","^2V"]]],["^1E","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","~$goog.debug","^2S","~$goog.events.Event","~$goog.events.EventType","^37","^2T"]]],["^1E","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^37"]]],["^1E","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2T"]]],["^1E","clojure/set.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T"]]],["^1E","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2Q","^2R","^2P"]]],["^1E","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^2R","^30"]]],["^1E","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^4B"]]],["^1E","re_frame/trace.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2H",["^ ","^2I",null,"^2J",["^H",[]],"^2K",["^U","^T","^O","^Z","^3R"]]]]],"~:clj-info",["^ ","jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/core.clj",1705134529000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1705149118000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1705134529000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/re-frame/re-frame/1.1.2/re-frame-1.1.2.jar!/re_frame/interop.clj",1705149118000,"jar:file:/Users/ahmedamer/.m2/repository/re-frame/re-frame/1.1.2/re-frame-1.1.2.jar!/re_frame/trace.cljc",1705149118000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1705134529000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1703583035000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/ratom.clj",1705134529000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1705142665000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^U","^V","^W","^W","^W","^X","^R","^Y","^Q","^Z","^Z","^[","^["],"^10",["^H",["^11"]],"~:shadow/js-access-global",["^H",["Error"]],"^12",["^ ","^13","^[","^14","^P","^15","^O","^16","^S","^17","^S","^18","^S","^19","^Z"],"~:defs",["^ ","~$kind",["^ ","^I","^1Q","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1<",["~$quote",["^1<",[["~$id","~$handler"]]]]]],"^I","^1S","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1<",[["^5G","^5H"]]],"~:protocol-impl",null,"~:arglists-meta",["^1<",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^5E",["^1<",["^5F",["^1<",[["^5G","^5H"]]]]]],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",24,"^8",6,"^9",24,"^:",11],"^I","^1U","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",24,"^9",24,"^5A","~$cljs.core/IMap","~:doc","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first."],"~$dispatch-later",["^ ","^5D",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",79,"^8",7,"^9",79,"^:",21,"^5E",["^1<",["^5F",["^1<",[[["^ ","~:keys",["~$ms","~$dispatch"],"^1>","~$effect"]]]]]]],"^I","^21","^6","re_frame/fx.cljc","^:",21,"^5I",["^1<",[["~$p__57893"]]],"^5J",null,"^5K",["^1<",[null,null]],"^8",1,"^5L",false,"^7",79,"^5M",["^H",["^5N","~$js"]],"^9",79,"^5O",1,"^5P",true,"^5E",["^1<",["^5F",["^1<",[[["^ ","^5U",["^5V","^5W"],"^1>","^5X"]]]]]]]],"^1:",["^ ","^R","^R","^X","^R","^T","^T"],"~:cljs.analyzer/constants",["^ ","^10",["^H",["~:db","~:warn","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^6?","^6:","^62","^68","^6@","^69","^63","^65","^6=","^6;","^60","^61","^6>","^67","^6<","^6A","^64","^66"]],"^1A",["^ ","^11",["^H",[]]],"^1B",["^ "],"^1C",["^U","^T","^W","^[","^P","^O","^Q","^S","^Z","^R"]],"^L","^J","~:ns-specs",["^ "],"~:ns-spec-vars",["^H",[]],"~:compiler-options",["^2G",[["^6E","~:static-fns"],true,["^6E","~:shadow-tweaks"],null,["^6E","~:source-map-inline"],null,["^6E","~:elide-asserts"],false,["^6E","~:optimize-constants"],null,["^6E","^1H"],null,["^6E","~:external-config"],null,["^6E","~:tooling-config"],null,["^6E","~:emit-constants"],null,["^6E","~:load-tests"],null,["^6E","~:form-size-threshold"],null,["^6E","~:data-readers"],null,["^6E","~:infer-externs"],"~:auto",["^6E","^1J"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6E","~:fn-invoke-direct"],null,["^6E","~:source-map"],"/dev/null"]]]