["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed, other than that\n *   `:db` is guaranteed to be executed first.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__64316 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__64317 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__64317);\n\ntry{try{var effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5735__auto___64433 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5735__auto___64433)){\nvar new_db_64434 = temp__5735__auto___64433;\nvar fexpr__64324_64435 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__64324_64435.cljs$core$IFn$_invoke$arity$1 ? fexpr__64324_64435.cljs$core$IFn$_invoke$arity$1(new_db_64434) : fexpr__64324_64435.call(null,new_db_64434));\n} else {\n}\n\nvar seq__64326 = cljs.core.seq(effects_without_db);\nvar chunk__64327 = null;\nvar count__64328 = (0);\nvar i__64329 = (0);\nwhile(true){\nif((i__64329 < count__64328)){\nvar vec__64337 = chunk__64327.cljs$core$IIndexed$_nth$arity$2(null,i__64329);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64337,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64337,(1),null);\nvar temp__5733__auto___64436 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___64436)){\nvar effect_fn_64437 = temp__5733__auto___64436;\n(effect_fn_64437.cljs$core$IFn$_invoke$arity$1 ? effect_fn_64437.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_64437.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__64440 = seq__64326;\nvar G__64441 = chunk__64327;\nvar G__64442 = count__64328;\nvar G__64443 = (i__64329 + (1));\nseq__64326 = G__64440;\nchunk__64327 = G__64441;\ncount__64328 = G__64442;\ni__64329 = G__64443;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__64326);\nif(temp__5735__auto__){\nvar seq__64326__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__64326__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__64326__$1);\nvar G__64446 = cljs.core.chunk_rest(seq__64326__$1);\nvar G__64447 = c__4556__auto__;\nvar G__64448 = cljs.core.count(c__4556__auto__);\nvar G__64449 = (0);\nseq__64326 = G__64446;\nchunk__64327 = G__64447;\ncount__64328 = G__64448;\ni__64329 = G__64449;\ncontinue;\n} else {\nvar vec__64340 = cljs.core.first(seq__64326__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64340,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64340,(1),null);\nvar temp__5733__auto___64452 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___64452)){\nvar effect_fn_64453 = temp__5733__auto___64452;\n(effect_fn_64453.cljs$core$IFn$_invoke$arity$1 ? effect_fn_64453.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_64453.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__64454 = cljs.core.next(seq__64326__$1);\nvar G__64455 = null;\nvar G__64456 = (0);\nvar G__64457 = (0);\nseq__64326 = G__64454;\nchunk__64327 = G__64455;\ncount__64328 = G__64456;\ni__64329 = G__64457;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__63948__auto___64458 = re_frame.interop.now();\nvar duration__63949__auto___64459 = (end__63948__auto___64458 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__63949__auto___64459,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__63948__auto___64458);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__64316);\n}} else {\nvar effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5735__auto___64461 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5735__auto___64461)){\nvar new_db_64464 = temp__5735__auto___64461;\nvar fexpr__64343_64465 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__64343_64465.cljs$core$IFn$_invoke$arity$1 ? fexpr__64343_64465.cljs$core$IFn$_invoke$arity$1(new_db_64464) : fexpr__64343_64465.call(null,new_db_64464));\n} else {\n}\n\nvar seq__64344 = cljs.core.seq(effects_without_db);\nvar chunk__64345 = null;\nvar count__64346 = (0);\nvar i__64347 = (0);\nwhile(true){\nif((i__64347 < count__64346)){\nvar vec__64357 = chunk__64345.cljs$core$IIndexed$_nth$arity$2(null,i__64347);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64357,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64357,(1),null);\nvar temp__5733__auto___64467 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___64467)){\nvar effect_fn_64468 = temp__5733__auto___64467;\n(effect_fn_64468.cljs$core$IFn$_invoke$arity$1 ? effect_fn_64468.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_64468.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__64473 = seq__64344;\nvar G__64474 = chunk__64345;\nvar G__64475 = count__64346;\nvar G__64476 = (i__64347 + (1));\nseq__64344 = G__64473;\nchunk__64345 = G__64474;\ncount__64346 = G__64475;\ni__64347 = G__64476;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__64344);\nif(temp__5735__auto__){\nvar seq__64344__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__64344__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__64344__$1);\nvar G__64478 = cljs.core.chunk_rest(seq__64344__$1);\nvar G__64479 = c__4556__auto__;\nvar G__64480 = cljs.core.count(c__4556__auto__);\nvar G__64481 = (0);\nseq__64344 = G__64478;\nchunk__64345 = G__64479;\ncount__64346 = G__64480;\ni__64347 = G__64481;\ncontinue;\n} else {\nvar vec__64360 = cljs.core.first(seq__64344__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64360,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64360,(1),null);\nvar temp__5733__auto___64484 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___64484)){\nvar effect_fn_64485 = temp__5733__auto___64484;\n(effect_fn_64485.cljs$core$IFn$_invoke$arity$1 ? effect_fn_64485.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_64485.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__64486 = cljs.core.next(seq__64344__$1);\nvar G__64487 = null;\nvar G__64488 = (0);\nvar G__64489 = (0);\nseq__64344 = G__64486;\nchunk__64345 = G__64487;\ncount__64346 = G__64488;\ni__64347 = G__64489;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.dispatch_later = (function re_frame$fx$dispatch_later(p__64364){\nvar map__64365 = p__64364;\nvar map__64365__$1 = (((((!((map__64365 == null))))?(((((map__64365.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__64365.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__64365):map__64365);\nvar effect = map__64365__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64365__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64365__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nreturn re_frame.interop.set_timeout_BANG_((function (){\nreturn re_frame.router.dispatch(dispatch);\n}),ms);\n}\n});\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nif(cljs.core.map_QMARK_(value)){\nreturn re_frame.fx.dispatch_later(value);\n} else {\nvar seq__64369 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__64370 = null;\nvar count__64371 = (0);\nvar i__64372 = (0);\nwhile(true){\nif((i__64372 < count__64371)){\nvar effect = chunk__64370.cljs$core$IIndexed$_nth$arity$2(null,i__64372);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__64499 = seq__64369;\nvar G__64500 = chunk__64370;\nvar G__64501 = count__64371;\nvar G__64502 = (i__64372 + (1));\nseq__64369 = G__64499;\nchunk__64370 = G__64500;\ncount__64371 = G__64501;\ni__64372 = G__64502;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__64369);\nif(temp__5735__auto__){\nvar seq__64369__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__64369__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__64369__$1);\nvar G__64508 = cljs.core.chunk_rest(seq__64369__$1);\nvar G__64509 = c__4556__auto__;\nvar G__64510 = cljs.core.count(c__4556__auto__);\nvar G__64511 = (0);\nseq__64369 = G__64508;\nchunk__64370 = G__64509;\ncount__64371 = G__64510;\ni__64372 = G__64511;\ncontinue;\n} else {\nvar effect = cljs.core.first(seq__64369__$1);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__64517 = cljs.core.next(seq__64369__$1);\nvar G__64518 = null;\nvar G__64519 = (0);\nvar G__64520 = (0);\nseq__64369 = G__64517;\nchunk__64370 = G__64518;\ncount__64371 = G__64519;\ni__64372 = G__64520;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),(function (seq_of_effects){\nif((!(cljs.core.sequential_QMARK_(seq_of_effects)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect expects a seq, but was given \",cljs.core.type(seq_of_effects)], 0));\n} else {\nvar seq__64388 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,seq_of_effects));\nvar chunk__64389 = null;\nvar count__64390 = (0);\nvar i__64391 = (0);\nwhile(true){\nif((i__64391 < count__64390)){\nvar vec__64399 = chunk__64389.cljs$core$IIndexed$_nth$arity$2(null,i__64391);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64399,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64399,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5733__auto___64527 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___64527)){\nvar effect_fn_64528 = temp__5733__auto___64527;\n(effect_fn_64528.cljs$core$IFn$_invoke$arity$1 ? effect_fn_64528.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_64528.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__64529 = seq__64388;\nvar G__64530 = chunk__64389;\nvar G__64531 = count__64390;\nvar G__64532 = (i__64391 + (1));\nseq__64388 = G__64529;\nchunk__64389 = G__64530;\ncount__64390 = G__64531;\ni__64391 = G__64532;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__64388);\nif(temp__5735__auto__){\nvar seq__64388__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__64388__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__64388__$1);\nvar G__64533 = cljs.core.chunk_rest(seq__64388__$1);\nvar G__64534 = c__4556__auto__;\nvar G__64535 = cljs.core.count(c__4556__auto__);\nvar G__64536 = (0);\nseq__64388 = G__64533;\nchunk__64389 = G__64534;\ncount__64390 = G__64535;\ni__64391 = G__64536;\ncontinue;\n} else {\nvar vec__64402 = cljs.core.first(seq__64388__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64402,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__64402,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5733__auto___64537 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___64537)){\nvar effect_fn_64538 = temp__5733__auto___64537;\n(effect_fn_64538.cljs$core$IFn$_invoke$arity$1 ? effect_fn_64538.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_64538.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__64540 = cljs.core.next(seq__64388__$1);\nvar G__64541 = null;\nvar G__64542 = (0);\nvar G__64543 = (0);\nseq__64388 = G__64540;\nchunk__64389 = G__64541;\ncount__64390 = G__64542;\ni__64391 = G__64543;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__64411 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__64412 = null;\nvar count__64413 = (0);\nvar i__64414 = (0);\nwhile(true){\nif((i__64414 < count__64413)){\nvar event = chunk__64412.cljs$core$IIndexed$_nth$arity$2(null,i__64414);\nre_frame.router.dispatch(event);\n\n\nvar G__64547 = seq__64411;\nvar G__64548 = chunk__64412;\nvar G__64549 = count__64413;\nvar G__64550 = (i__64414 + (1));\nseq__64411 = G__64547;\nchunk__64412 = G__64548;\ncount__64413 = G__64549;\ni__64414 = G__64550;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__64411);\nif(temp__5735__auto__){\nvar seq__64411__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__64411__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__64411__$1);\nvar G__64551 = cljs.core.chunk_rest(seq__64411__$1);\nvar G__64552 = c__4556__auto__;\nvar G__64553 = cljs.core.count(c__4556__auto__);\nvar G__64554 = (0);\nseq__64411 = G__64551;\nchunk__64412 = G__64552;\ncount__64413 = G__64553;\ni__64414 = G__64554;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__64411__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__64555 = cljs.core.next(seq__64411__$1);\nvar G__64556 = null;\nvar G__64557 = (0);\nvar G__64558 = (0);\nseq__64411 = G__64555;\nchunk__64412 = G__64556;\ncount__64413 = G__64557;\ni__64414 = G__64558;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__64419 = cljs.core.seq(value);\nvar chunk__64420 = null;\nvar count__64421 = (0);\nvar i__64422 = (0);\nwhile(true){\nif((i__64422 < count__64421)){\nvar event = chunk__64420.cljs$core$IIndexed$_nth$arity$2(null,i__64422);\nclear_event(event);\n\n\nvar G__64559 = seq__64419;\nvar G__64560 = chunk__64420;\nvar G__64561 = count__64421;\nvar G__64562 = (i__64422 + (1));\nseq__64419 = G__64559;\nchunk__64420 = G__64560;\ncount__64421 = G__64561;\ni__64422 = G__64562;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__64419);\nif(temp__5735__auto__){\nvar seq__64419__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__64419__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__64419__$1);\nvar G__64563 = cljs.core.chunk_rest(seq__64419__$1);\nvar G__64564 = c__4556__auto__;\nvar G__64565 = cljs.core.count(c__4556__auto__);\nvar G__64566 = (0);\nseq__64419 = G__64563;\nchunk__64420 = G__64564;\ncount__64421 = G__64565;\ni__64422 = G__64566;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__64419__$1);\nclear_event(event);\n\n\nvar G__64567 = cljs.core.next(seq__64419__$1);\nvar G__64568 = null;\nvar G__64569 = (0);\nvar G__64570 = (0);\nseq__64419 = G__64567;\nchunk__64420 = G__64568;\ncount__64421 = G__64569;\ni__64422 = G__64570;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.tools.reader.impl.utils","~$cljs.tools.reader.impl.utils","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.impl.commons","~$cljs.tools.reader.impl.commons","~$clojure.tools.reader.impl.errors","~$cljs.tools.reader.impl.errors","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.tools.reader.edn","~$cljs.tools.reader.edn","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^Y","~$re-frame.interceptor","^Z","~$re-frame.events","^[","~$re-frame.trace","^10","~$re-frame.registrar","^11","~$cljs.core","^12","~$goog","^13","~$router","~$re-frame.router","^15","^15","~$trace","^10","~$events","^[","~$re-frame.loggers","^18","~$re-frame.db","^19"],"~:seen",["^R",["~:require"]],"~:uses",["^ ","~$app-db","^19","~$->interceptor","^Z","~$set-timeout!","^Y","~$get-handler","^11","~$clear-handlers","^11","~$register-handler","^11","~$console","^18"],"~:require-macros",["^ ","^10","^10","^16","^10","^12","^12"],"~:form",["~#list",["~$ns","^T",["^1F",["^1;",["^15","~:as","^14"],["^19","~:refer",["^1="]],["^Z","^1I",["^1>"]],["^Y","^1I",["^1?"]],["^[","^1H","^17"],["^11","^1I",["^1@","^1A","^1B"]],["^18","^1I",["^1C"]],["^10","^1H","^16","~:include-macros",true]]]]],"~:flags",["^ ","^1;",["^R",[]]],"~:js-deps",["^ "],"~:deps",["^13","^12","^15","^19","^Z","^Y","^[","^11","^18","^10"]],"^V","^T","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1705220780360,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (let [effects            (:effects context)\n                     effects-without-db (dissoc effects :db)]\n                 ;; :db effect is guaranteed to be handled before all other effects.\n                 (when-let [new-db (:db effects)]\n                   ((get-handler kind :db false) new-db))\n                 (doseq [[effect-key effect-value] effects-without-db]\n                   (if-let [effect-fn (get-handler kind effect-key false)]\n                     (effect-fn effect-value)\n                     (console :warn \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\"))))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(defn dispatch-later\n  [{:keys [ms dispatch] :as effect}]\n  (if (or (empty? dispatch) (not (number? ms)))\n    (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n    (set-timeout! #(router/dispatch dispatch) ms)))\n\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (if (map? value)\n      (dispatch-later value)\n      (doseq [effect (remove nil? value)]\n        (dispatch-later effect)))))\n\n;; :fx\n;;\n;; Handle one or more effects. Expects a collection of vectors (tuples) of the\n;; form [effect-key effect-value]. `nil` entries in the collection are ignored\n;; so effects can be added conditionally.\n;;\n;; usage:\n;;\n;; {:fx [[:dispatch [:event-id \"param\"]]\n;;       nil\n;;       [:http-xhrio {:method :post\n;;                     ...}]]}\n;;\n\n(reg-fx\n  :fx\n  (fn [seq-of-effects]\n    (if-not (sequential? seq-of-effects)\n      (console :error \"re-frame: \\\":fx\\\" effect expects a seq, but was given \" (type seq-of-effects))\n      (doseq [[effect-key effect-value] (remove nil? seq-of-effects)]\n        (when (= :db effect-key)\n          (console :warn \"re-frame: \\\":fx\\\" effect should not contain a :db effect\"))\n        (if-let [effect-fn (get-handler kind effect-key false)]\n          (effect-fn effect-value)\n          (console :warn \"re-frame: in \\\":fx\\\" effect found \" effect-key \" which has no associated handler. Ignoring.\"))))))\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^R",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__64316","re-frame.trace/*current-trace*","*current-trace*-temp-val__64317","re-frame.trace/start-trace","end__63948__auto__","re-frame.interop/now","duration__63949__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","effects","effects-without-db","cljs.core.dissoc","temp__5735__auto__","new-db","fexpr__64324","fexpr__64343","re_frame.registrar.get_handler","seq__64326","cljs.core/seq","chunk__64327","count__64328","i__64329","vec__64337","cljs.core.nth","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__64340","cljs.core/first","cljs.core/next","seq__64344","chunk__64345","count__64346","i__64347","vec__64357","vec__64360","effect-key","effect-value","temp__5733__auto__","effect-fn","re_frame.loggers.console","p__64364","map__64365","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","re-frame.fx/dispatch-later","ms","dispatch","effect","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","value","cljs.core/map?","seq__64369","chunk__64370","count__64371","i__64372","cljs.core.remove","cljs.core/nil?","seq-of-effects","cljs.core/sequential?","cljs.core/type","seq__64388","chunk__64389","count__64390","i__64391","vec__64399","vec__64402","cljs.core._EQ_","cljs.core/vector?","seq__64411","chunk__64412","count__64413","i__64414","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__64419","chunk__64420","count__64421","i__64422","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^R",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$cljs.core/=","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.registrar/kinds","~$re-frame.fx/dispatch-later","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/map?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1O","reagent/impl/batching.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^R",[]],"~:deps-syms",["^13","^12","~$reagent.debug","~$reagent.impl.util"]]],["^1O","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.dom.HtmlElement"]]],["^1O","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.labs.userAgent.util","~$goog.string"]]],["^1O","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.array","~$goog.asserts"]]],["^1O","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1O","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","^2Y","~$goog.object","~$goog.string.internal"]]],["^1O","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^30","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^34"]]],["^1O","re_frame/loggers.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","~$clojure.set"]]],["^1O","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^30"]]],["^1O","reagent/impl/util.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","~$clojure.string","~$clojure.walk","^33","^2V"]]],["^1O","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2Y","~$goog.reflect","^2Z"]]],["^1O","re_frame/router.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^[","^Y","^18","^10"]]],["^1O","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^30","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^31","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1O","re_frame/registrar.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^Y","^18","~$re-frame.settings"]]],["^1O","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^32"]]],["^1O","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","reagent/ratom.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^2W","^2V","~$reagent.impl.batching","^3;","^33"]]],["^1O","re_frame/interop.cljs"],["b153aa5637718f7ef415049480b003bb00fd359b","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","~$goog.async.nextTick","~$goog.events","~$reagent.core","~$reagent.ratom"]]],["^1O","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.disposable.IDisposable"]]],["^1O","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1O","shadow/js.js"],["fa1e82c50ca54c81300cceeb10716bdd3f414429","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","reagent/impl/template.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^G","^3<","^2W","~$reagent.impl.component","~$reagent.impl.input","~$reagent.impl.protocols","^3K","^2V","^33"]]],["^1O","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^30"]]],"~:SHADOW-TIMESTAMP",[1705142692000,1705142692000,1704683672000],["^3M","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^3N","~$module$node_modules$object_assign$index"]]],["^1O","re_frame/events.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^19","~$re-frame.utils","^Y","^11","^18","^Z","^10"]]],["^1O","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^30","^3A"]]],["^1O","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.events.ListenableKey"]]],["^1O","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^30","~$goog.html.trustedtypes","^37","^38","^39","^3:"]]],["^1O","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","~$goog.events.Listener","^33"]]],["^1O","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","^30","~$goog.html.SafeUrl","^39","^3:","^34"]]],["^1O","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^30","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3Z","^36","~$goog.html.uncheckedconversions","^39","^34"]]],["^1O","reagent/impl/component.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^33","^G","^2W","^3G","^3S","^3K","^2V"]]],["^1O","clojure/walk.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12"]]],["^1O","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1O","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","^30","~$goog.dom.TagName","~$goog.dom.tags","^42","^43","~$goog.html.SafeStyleSheet","^3Z","^36","^3X","^37","^38","^3>","^33","^39","^3:","^34"]]],["^1O","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^33"]]],["^1O","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","^2Y","^2Z"]]],["^1O","re_frame/settings.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^Y","^18"]]],["^1O","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","^30","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^47","~$goog.dom.safe","^41","^44","~$goog.math.Coordinate","~$goog.math.Size","^33","^2Z","~$goog.string.Unicode","^32"]]],["^1O","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.debug.Error","^4;"]]],["^1O","reagent/impl/protocols.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12"]]],["^1O","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","^30","^2Z","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1O","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^3M","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","519ffd5a4c91b67302cc9947b794966d629860cd","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^3N"]]],["^1O","re_frame/db.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^Y"]]],["^1O","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",[]]],["^1O","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","^33"]]],["^1O","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^2Z","~$goog.string.StringBuffer"]]],["^3M","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","6093d43b27c84de58b9ce55e3a930469339c9e54","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^3N","^3U"]]],["^1O","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^30"]]],["^1O","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^4<","^44","^39","^34"]]],["^1O","re_frame/interceptor.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^18","^Y","^10","^3;"]]],["^1O","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^34"]]],["^1O","reagent/core.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^G","~$reagent.impl.template","^3Q","^2W","^3G","^3S","^3K","^2V"]]],["^1O","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","~$goog.debug.errorcontext","^32"]]],["^1O","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.math"]]],["^1O","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","^30","^40","^4I"]]],["^1O","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^3B","~$goog.dom","^47","^4<","^40","^41","^36","^3>","^3?","^39"]]],["^1O","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^30","^41","^42","^43","^49","^3Z","^36","^39","^34"]]],["^1O","re_frame/utils.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^18"]]],["^1O","re_frame/fx.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^15","^19","^Z","^Y","^[","^11","^18","^10"]]],["^1O","reagent/impl/input.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^3Q","^3G","^3S"]]],["^1O","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.Disposable","~$goog.events.EventId"]]],["^1O","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13"]]],["^1O","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.math.Long","~$goog.math.Integer","^2Z","^33","^2[","~$goog.Uri","^4F"]]],["^1O","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^30","^3X","^39","^3:"]]],["^1O","reagent/debug.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12"]]],["^1O","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","^30","^43","^33","^39","^3:","^34"]]],["^1O","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","~$goog.debug","^31","~$goog.events.Event","~$goog.events.EventType","^3A","^32"]]],["^1O","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^3A"]]],["^1O","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^32"]]],["^1O","clojure/set.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12"]]],["^1O","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^2[","^30","^2Z"]]],["^1O","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^30","^3:"]]],["^1O","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^4L"]]],["^1O","re_frame/trace.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2R",["^ ","^2S",null,"^2T",["^R",[]],"^2U",["^13","^12","^Y","^18","^40"]]]]],"~:clj-info",["^ ","jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/core.clj",1705220763000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1705149118000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/re-frame/re-frame/1.2.0/re-frame-1.2.0.jar!/re_frame/interop.clj",1705220382000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/debug.clj",1705220763000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/re-frame/re-frame/1.2.0/re-frame-1.2.0.jar!/re_frame/trace.cljc",1705220382000,"jar:file:/Users/ahmedamer/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/ratom.clj",1705220763000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1703583035000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1705142665000,"jar:file:/Users/ahmedamer/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/interop.clj",1705220763000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1704683672000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1639220743000,"jar:file:/Users/ahmedamer/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1705142665000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O"],"^P",null,"^Q",["^R",[]],"^S","^T","^W",null,"^X",["^ ","^Y","^Y","^Z","^Z","^[","^[","^10","^10","^11","^11","^12","^12","^13","^13","^14","^15","^15","^15","^16","^10","^17","^[","^18","^18","^19","^19"],"^1:",["^R",["^1;"]],"~:shadow/js-access-global",["^R",["Error"]],"^1<",["^ ","^1=","^19","^1>","^Z","^1?","^Y","^1@","^11","^1A","^11","^1B","^11","^1C","^18"],"~:defs",["^ ","~$kind",["^ ","^S","^1[","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1F",["~$quote",["^1F",[["~$id","~$handler"]]]]]],"^S","^21","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1F",[["^5Q","^5R"]]],"~:protocol-impl",null,"~:arglists-meta",["^1F",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^5O",["^1F",["^5P",["^1F",[["^5Q","^5R"]]]]]],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",24,"^8",6,"^9",24,"^:",11],"^S","^23","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",24,"^9",24,"^5K","~$cljs.core/IMap","~:doc","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first."],"~$dispatch-later",["^ ","^5N",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",79,"^8",7,"^9",79,"^:",21,"^5O",["^1F",["^5P",["^1F",[[["^ ","~:keys",["~$ms","~$dispatch"],"^1H","~$effect"]]]]]]],"^S","^2;","^6","re_frame/fx.cljc","^:",21,"^5S",["^1F",[["~$p__64364"]]],"^5T",null,"^5U",["^1F",[null,null]],"^8",1,"^5V",false,"^7",79,"^5W",["^R",["^5X","~$js"]],"^9",79,"^5Y",1,"^5Z",true,"^5O",["^1F",["^5P",["^1F",[[["^ ","^63",["^64","^65"],"^1H","^66"]]]]]]]],"^1D",["^ ","^10","^10","^16","^10","^12","^12"],"~:cljs.analyzer/constants",["^ ","^1:",["^R",["~:db","~:warn","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^6I","^6D","^6<","^6B","^6J","^6C","^6=","^6?","^6G","^6E","^6:","^6;","^6H","^6A","^6F","^6K","^6>","^6@"]],"^1K",["^ ","^1;",["^R",[]]],"^1L",["^ "],"^1M",["^13","^12","^15","^19","^Z","^Y","^[","^11","^18","^10"]],"^V","^T","~:ns-specs",["^ "],"~:ns-spec-vars",["^R",[]],"~:compiler-options",["^2Q",[["^6O","~:static-fns"],true,["^6O","~:shadow-tweaks"],null,["^6O","~:source-map-inline"],null,["^6O","~:elide-asserts"],false,["^6O","~:optimize-constants"],null,["^6O","^1R"],null,["^6O","~:external-config"],null,["^6O","~:tooling-config"],null,["^6O","~:emit-constants"],null,["^6O","~:load-tests"],null,["^6O","~:form-size-threshold"],null,["^6O","~:data-readers"],null,["^6O","~:infer-externs"],"~:auto",["^6O","^1T"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6O","~:fn-invoke-direct"],null,["^6O","~:source-map"],"/dev/null"]]]